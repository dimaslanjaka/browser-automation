{"version":3,"sources":["../../src/routers/nik-parser.js"],"names":["express","getNumbersOnly","nikParser","loadCsvData"],"mappings":";;;;;;;;;;;;;AAKA,MAAM,MAAA,GAASA,yBAAQ,MAAA,EAAO;AAG9B,MAAA,CAAO,GAAA,CAAI,GAAA,EAAK,OAAO,GAAA,EAAK,GAAA,KAAQ;AAClC,EAAA,MAAM,MAAMC,8BAAA,CAAe,GAAA,CAAI,MAAM,GAAA,IAAO,GAAA,CAAI,MAAM,GAAG,CAAA;AACzD,EAAA,IAAI,CAAC,GAAA,EAAK;AACR,IAAA,OAAO,GAAA,CAAI,OAAO,GAAG,CAAA,CAAE,KAAK,EAAE,KAAA,EAAO,yBAAyB,CAAA;AAAA,EAChE;AAEA,EAAA,IAAI,MAAA,GAASC,2BAAU,GAAG,CAAA;AAC1B,EAAA,MAAM,SAAA,GAAY,MAAMC,oBAAA,EAAY;AAEpC,EAAA,MAAA,CAAO,OAAA,GAAU,UAAU,IAAA,CAAK,CAAC,SAASF,8BAAA,CAAe,IAAA,CAAK,GAAG,CAAA,KAAM,GAAG,CAAA;AAC1E,EAAA,MAAA,GAAS,OAAO,WAAA,CAAY,MAAA,CAAO,QAAQ,MAAM,CAAA,CAAE,KAAK,CAAC,CAAC,CAAC,CAAA,EAAG,CAAC,CAAC,CAAA,KAAM,EAAE,aAAA,CAAc,CAAC,CAAC,CAAC,CAAA;AACzF,EAAA,GAAA,CAAI,KAAK,MAAM,CAAA;AACjB,CAAC,CAAA;AAED,IAAO,kBAAA,GAAQ","file":"nik-parser.cjs","sourcesContent":["import express from 'express';\nimport nikParser from 'nik-parser-jurusid';\nimport { loadCsvData } from '../../data/index.js';\nimport { getNumbersOnly } from '../utils-browser.js';\n\nconst router = express.Router();\n\n// Sample endpoint: GET /nik-parser?nik=1234567890123456\nrouter.get('/', async (req, res) => {\n  const nik = getNumbersOnly(req.query.nik || req.query.NIK);\n  if (!nik) {\n    return res.status(400).json({ error: 'Missing NIK parameter' });\n  }\n  // Parse the NIK using nik-parser-jurusid\n  let parsed = nikParser(nik);\n  const dataKunto = await loadCsvData();\n  // Find the corresponding item in dataKunto\n  parsed.current = dataKunto.find((item) => getNumbersOnly(item.nik) === nik);\n  parsed = Object.fromEntries(Object.entries(parsed).sort(([a], [b]) => a.localeCompare(b)));\n  res.json(parsed);\n});\n\nexport default router;\n"]}