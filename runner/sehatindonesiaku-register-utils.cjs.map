{"version":3,"sources":["../../src/runner/sehatindonesiaku-register-utils.ts"],"names":["anyElementWithTextExists","PembatasanUmurError","isVisible","waitForDomStable","page","year","targetDate","day"],"mappings":"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","file":"sehatindonesiaku-register-utils.cjs","sourcesContent":["import 'dotenv/config.js';\nimport type { Page } from 'puppeteer';\nimport { anyElementWithTextExists, waitForDomStable } from '../puppeteer_utils.js';\nimport { DataItem } from './types.js';\nimport { PembatasanUmurError } from './sehatindonesiaku-errors.js';\n\nexport async function isSpecificModalVisible(page: Page, textToMatch: string = 'Data belum sesuai KTP') {\n  // Select all divs that look like modals\n  const modals = await page.$$('div.shadow-gmail');\n\n  for (const modal of modals) {\n    const text = await page.evaluate((el) => el.innerText, modal);\n\n    // Check if it contains the specific text\n    if (!text.trim().toLowerCase().includes(textToMatch.toLowerCase())) continue;\n\n    // Check if the element is visible in the layout\n    const visible = await page.evaluate((el) => {\n      const style = window.getComputedStyle(el);\n      return (\n        style.display !== 'none' &&\n        style.visibility !== 'hidden' &&\n        parseFloat(style.opacity) > 0 &&\n        el.offsetParent !== null\n      );\n    }, modal);\n\n    if (visible) return true;\n  }\n\n  return false;\n}\n\n/**\n * Clicks the \"Daftarkan dengan NIK\" button on the page.\n *\n * This function searches for all <button> elements and clicks the first one whose text content\n * (case-insensitive) is exactly \"daftarkan dengan nik\". Throws an error if no such button is found.\n *\n * @param page - Puppeteer page instance\n * @throws If the \"Daftarkan dengan NIK\" button is not found\n */\nexport async function clickDaftarkanDenganNIK(page: Page) {\n  // Get all buttons on the page\n  const buttons = await page.$$('button');\n\n  for (const btn of buttons) {\n    const text = await btn.evaluate((el) => el.textContent?.trim().toLowerCase());\n    if (text === 'daftarkan dengan nik') {\n      await btn.click();\n      return;\n    }\n  }\n\n  throw new Error(\"❌ 'Daftarkan dengan NIK' button not found\");\n}\n\nexport async function handleKuotaHabisModal(page: Page) {\n  // Grab all modal containers\n  const modals = await page.$$('div.shadow-gmail');\n\n  for (const modal of modals) {\n    const text = await page.evaluate((el) => el.innerText, modal);\n\n    if (text.includes('Kuota Pemeriksaan Habis')) {\n      // Check visibility\n      const visible = await page.evaluate((el) => {\n        const style = window.getComputedStyle(el);\n        const rect = el.getBoundingClientRect();\n        const isVisible =\n          style.display !== 'none' &&\n          style.visibility !== 'hidden' &&\n          parseFloat(style.opacity) > 0 &&\n          rect.width > 0 &&\n          rect.height > 0;\n\n        return isVisible;\n      }, modal);\n\n      if (!visible) return false;\n\n      // Find all buttons inside this modal\n      const buttons = await modal.$$('button');\n\n      for (const btn of buttons) {\n        const btnText = await page.evaluate((el) => el.innerText.trim(), btn);\n\n        if (btnText.startsWith('Lanjut')) {\n          await btn.click();\n          return true;\n        }\n      }\n    }\n  }\n\n  return false; // modal not found, not visible, or button not matched\n}\n\n/**\n * Handles the confirmation modal for kuota habis (quota full) scenario.\n * Clicks the appropriate button based on the user's choice: 'lanjut' (continue) or 'edit' (choose another date).\n * @param page Puppeteer page instance\n * @param choice 'lanjut' to continue, 'edit' to pick another date\n */\nexport async function handleConfirmationModal(page: Page, choice: 'lanjut' | 'edit', item: DataItem) {\n  const isAgeLimitCheckDisplayed =\n    (await anyElementWithTextExists(page, 'div.pb-2', 'Pembatasan Umur Pemeriksaan')) ||\n    (await isSpecificModalVisible(page, 'Pembatasan Umur Pemeriksaan'));\n  console.log(`Is age limit check displayed: ${isAgeLimitCheckDisplayed}`);\n  if (isAgeLimitCheckDisplayed) {\n    throw new PembatasanUmurError(item.nik);\n  }\n\n  if (choice === 'lanjut') {\n    console.log(`Clicking \"Pilih\" button inside individu terdaftar table...`);\n    await clickPilihButton(page);\n    console.log(`Clicking \"Daftarkan dengan NIK\" button...`);\n    await clickDaftarkanDenganNIK(page);\n  }\n}\n\n/**\n * Clicks the \"Pilih\" button in the table of registered individuals.\n *\n * This function searches for all buttons within the element with class\n * \".table-individu-terdaftar\" and clicks the first button whose inner text is exactly \"Pilih\".\n * Throws an error if no such button is found, and lists the found button texts for debugging.\n *\n * @param page - Puppeteer page instance\n * @throws If the \"Pilih\" button is not found\n */\nexport async function clickPilihButton(page: Page) {\n  const buttons = await page.$$('.table-individu-terdaftar table button');\n\n  let clicked = false;\n  for (const btn of buttons) {\n    const text = await btn.evaluate((el) => el.innerText.trim());\n    const isPilih = text.trim().toLowerCase() === 'pilih';\n    // console.log(`Found button with text: \"${text}\" (isPilih: ${isPilih})`);\n    if (isPilih) {\n      // Check if button is enabled and visible\n      const isDisabled = await btn.evaluate((el) => {\n        const style = window.getComputedStyle(el);\n        return style.opacity === '0.5' || style.pointerEvents === 'none';\n      });\n      const isVisible = await btn.evaluate((el) => {\n        const style = window.getComputedStyle(el);\n        const rect = el.getBoundingClientRect();\n        const isVisible =\n          style.display !== 'none' &&\n          style.visibility !== 'hidden' &&\n          parseFloat(style.opacity) > 0 &&\n          rect.width > 0 &&\n          rect.height > 0;\n        return isVisible;\n      });\n      if (isDisabled) {\n        throw new Error(`'Pilih' button is disabled`);\n      } else if (!isVisible) {\n        throw new Error(`'Pilih' button is not visible`);\n      } else {\n        await btn.click();\n        clicked = true;\n        break;\n      }\n    }\n  }\n\n  if (!clicked) {\n    const foundTexts = await Promise.all(buttons.map((b) => b.evaluate((el) => el.innerText.trim())));\n    throw new Error(`❌ 'Pilih' button not found. Found: ${JSON.stringify(foundTexts)}`);\n  }\n\n  await waitForDomStable(page, 2000);\n}\n\n/**\n * Clicks the \"Selanjutnya\" (Next) button in the registration form.\n *\n * This function first checks if a disabled \"Selanjutnya\" button (as a div with specific classes) exists on the page.\n * If found, it throws an error immediately. Otherwise, it searches for all enabled submit buttons and clicks the one\n * whose descendants contain the text \"Selanjutnya\". Throws if no such button is found.\n *\n * @param page - Puppeteer page instance\n * @throws If the \"Selanjutnya\" button is disabled or not found\n */\nexport async function clickSubmit(page: Page) {\n  // Immediately check if the disabled Selanjutnya div exists\n  const disabledSelanjutnya = await page.$(\n    'div.h-11.flex.items-center.justify-center.rounded-lg.bg-disabled.px-2.text-sm.text-gray-5.font-normal.cursor-not-allowed'\n  );\n  if (disabledSelanjutnya) {\n    const text = await disabledSelanjutnya.evaluate((el) => el.textContent?.trim());\n    if (text && text.includes('Selanjutnya')) {\n      throw new Error(\"❌ 'Selanjutnya' button is disabled\");\n    }\n  }\n\n  // Find all submit buttons and check for the text 'Selanjutnya' in descendants\n  const buttons = await page.$$('button[type=\"submit\"]');\n  let found = false;\n  for (const btn of buttons) {\n    const hasText = await btn.evaluate((el) => {\n      // Check all descendants for the text 'Selanjutnya'\n      return Array.from(el.querySelectorAll('*')).some(\n        (node) => node.textContent && node.textContent.trim().includes('Selanjutnya')\n      );\n    });\n    if (hasText) {\n      await btn.click();\n      found = true;\n      break;\n    }\n  }\n  if (!found) {\n    throw new Error(\"❌ 'Selanjutnya' button not found\");\n  }\n\n  await waitForDomStable(page, 2000);\n}\n\n/**\n * Clicks the kelurahan option in the address modal.\n * Waits for the modal and the kelurahan section to appear, then selects the specified kelurahan.\n * Throws an error if the kelurahan is not found.\n * @param page Puppeteer page instance\n * @param kelurahan Kelurahan name to select\n */\nexport async function clickKelurahan(page: Page, kelurahan: string) {\n  // Wait for the modal and the kelurahan section to appear\n  await page.waitForSelector('::-p-xpath(//div[contains(text(), \"Daftar Kelurahan\")])', { visible: true });\n\n  // Find the div with text 'Daftar Kelurahan'\n  const kelSection = await page.waitForSelector('::-p-xpath(//div[contains(text(), \"Daftar Kelurahan\")])');\n  if (!kelSection) {\n    throw new Error('Daftar Kelurahan section not found');\n  }\n\n  // Get the parent element (container of the buttons)\n  const parent = await kelSection.evaluateHandle((el) => el.parentElement);\n\n  // Find all button > div inside this parent\n  const divs = await parent.asElement().$$('button > div');\n  let found = false;\n  for (const div of divs) {\n    const text = await div.evaluate((el) => el.textContent?.trim().toLowerCase());\n    if (text === kelurahan.trim().toLowerCase()) {\n      const button = await div.evaluateHandle((el) => el.parentElement as HTMLElement);\n      await (button.asElement() as import('puppeteer').ElementHandle<Element>).click();\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) {\n    const allTexts = await Promise.all(divs.map((div) => div.evaluate((el) => el.textContent?.trim())));\n    console.error('Available Kelurahan options:', allTexts);\n    throw new Error(`Kelurahan '${kelurahan}' not found`);\n  }\n\n  await waitForDomStable(page, 500); // Wait for any animations or transitions\n}\n\n/**\n * Clicks the kecamatan option in the address modal.\n * Waits for the modal and the kecamatan section to appear, then selects the specified kecamatan.\n * Throws an error if the kecamatan is not found.\n * @param page Puppeteer page instance\n * @param kecamatan Kecamatan name to select\n */\nexport async function clickKecamatan(page: Page, kecamatan: string) {\n  // Wait for the modal and the kecamatan section to appear\n  await page.waitForSelector('::-p-xpath(//div[contains(text(), \"Daftar Kecamatan\")])', { visible: true });\n\n  // Find the div with text 'Daftar Kecamatan'\n  const kecSection = await page.waitForSelector('::-p-xpath(//div[contains(text(), \"Daftar Kecamatan\")])');\n  if (!kecSection) {\n    throw new Error('Daftar Kecamatan section not found');\n  }\n\n  // Get the parent element (container of the buttons)\n  const parent = await kecSection.evaluateHandle((el) => el.parentElement);\n\n  // Find all button > div inside this parent\n  const divs = await parent.asElement().$$('button > div');\n  let found = false;\n  for (const div of divs) {\n    const text = await div.evaluate((el) => el.textContent?.trim().toLowerCase());\n    if (text === kecamatan.trim().toLowerCase()) {\n      const button = await div.evaluateHandle((el) => el.parentElement as HTMLElement);\n      await (button.asElement() as import('puppeteer').ElementHandle<Element>).click();\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) {\n    const allTexts = await Promise.all(divs.map((div) => div.evaluate((el) => el.textContent?.trim())));\n    console.error('Available Kecamatan options:', allTexts);\n    throw new Error(`Kecamatan '${kecamatan}' not found`);\n  }\n\n  await waitForDomStable(page, 500); // Wait for any animations or transitions\n}\n\n/**\n * Clicks the kabupaten/kota option in the address modal.\n * Waits for the modal and the kabupaten/kota section to appear, then selects the specified kabupaten/kota.\n * Throws an error if the kabupaten/kota is not found.\n * @param page Puppeteer page instance\n * @param kota Kabupaten/Kota name to select\n */\nexport async function clickKabupatenKota(page: Page, kota: string) {\n  // Wait for the modal and the kabupaten/kota section to appear\n  await page.waitForSelector('::-p-xpath(//div[contains(text(), \"Daftar Kabupaten/Kota\")])', { visible: true });\n\n  // Find the div with text 'Daftar Kabupaten/Kota'\n  const kotaSection = await page.waitForSelector('::-p-xpath(//div[contains(text(), \"Daftar Kabupaten/Kota\")])');\n  if (!kotaSection) {\n    throw new Error('Daftar Kabupaten/Kota section not found');\n  }\n\n  // Get the parent element (container of the buttons)\n  const parent = await kotaSection.evaluateHandle((el) => el.parentElement);\n\n  // Find all button > div inside this parent\n  const divs = await parent.asElement().$$('button > div');\n  let found = false;\n  for (const div of divs) {\n    const text = await div.evaluate((el) => el.textContent?.trim().toLowerCase());\n    if (text === kota.trim().toLowerCase()) {\n      const button = await div.evaluateHandle((el) => el.parentElement as HTMLElement);\n      await (button.asElement() as import('puppeteer').ElementHandle<Element>).click();\n      found = true;\n      break;\n    }\n  }\n\n  if (!found) {\n    const allTexts = await Promise.all(divs.map((div) => div.evaluate((el) => el.textContent?.trim())));\n    console.error('Available Kabupaten/Kota options:', allTexts);\n    throw new Error(`Kota '${kota}' not found`);\n  }\n\n  await waitForDomStable(page, 500); // Wait for any animations or transitions\n}\n\n/**\n * Clicks the provinsi option in the address modal.\n * Waits for the modal and the provinsi section to appear, then selects the specified provinsi.\n * Throws an error if the provinsi is not found.\n * @param page Puppeteer page instance\n * @param provinsi Province name to select\n */\nexport async function clickProvinsi(page: Page, provinsi: string) {\n  // Wait for the modal and the provinsi section to appear\n  await page.waitForSelector('::-p-xpath(//div[contains(text(), \"Daftar Provinsi\")])', { visible: true });\n\n  // Find the div with text 'Daftar Provinsi' using Puppeteer's query handler\n  const provSection = await page.waitForSelector('::-p-xpath(//div[contains(text(), \"Daftar Provinsi\")])');\n  if (!provSection) {\n    throw new Error('Daftar Provinsi section not found');\n  }\n\n  // Get the parent element (container of the buttons)\n  const parent = await provSection.evaluateHandle((el) => el.parentElement);\n\n  // Find all button > div inside this parent\n  const divs = await parent.asElement().$$('button > div');\n  let found = false;\n  for (const div of divs) {\n    const text = await div.evaluate((el) => el.textContent?.trim().toLowerCase());\n    if (text === provinsi.trim().toLowerCase()) {\n      const button = await div.evaluateHandle((el) => el.parentElement as HTMLElement);\n      await (button.asElement() as import('puppeteer').ElementHandle<Element>).click();\n      found = true;\n      break;\n    }\n  }\n  if (!found) {\n    const allTexts = await Promise.all(divs.map((div) => div.evaluate((el) => el.textContent?.trim())));\n    console.error('Available provinsi options:', allTexts);\n    throw new Error(`Provinsi '${provinsi}' not found`);\n  }\n\n  await waitForDomStable(page, 500); // Wait for any animations or transitions\n}\n\n/**\n * Clicks the address modal dropdown to open the province selector.\n * Finds and clicks the \"Alamat Domisili\" dropdown to open the province selector modal.\n * Throws an error if the dropdown is not found or not clickable.\n * @param page Puppeteer page instance\n */\nexport async function clickAddressModal(page: Page) {\n  // Find and click the \"Alamat Domisili\" dropdown to open the province selector\n  const clicked = await page.evaluate(() => {\n    // Find all divs with class \"font-semibold\"\n    const allDivs = Array.from(document.querySelectorAll('div.font-semibold'));\n    // Find the one whose text starts with \"Alamat Domisili\"\n    const labelDiv = allDivs.find((div) => div.textContent && div.textContent.trim().startsWith('Alamat Domisili'));\n    if (!labelDiv) return false;\n    // The dropdown trigger is the next sibling .relative.flex container\n    let container = labelDiv.parentElement;\n    // Find the .relative.flex container (dropdown root)\n    let dropdownContainer = null;\n    while (container && !dropdownContainer) {\n      dropdownContainer = Array.from(container.querySelectorAll('div.relative'))[0];\n      if (!dropdownContainer) container = container.parentElement;\n    }\n    // Fallback: try next sibling if not found\n    if (!dropdownContainer && labelDiv.nextElementSibling) {\n      dropdownContainer = labelDiv.nextElementSibling;\n    }\n    if (!dropdownContainer) return false;\n    // Click the div with class containing min-h-[2.9rem] inside the container\n    const trigger = Array.from(dropdownContainer.querySelectorAll('div')).find(\n      (div) => (div as Element).className && (div as Element).className.includes('min-h-[2.9rem]')\n    ) as Element | null;\n    if (!trigger) return false;\n    trigger.dispatchEvent(new MouseEvent('mousedown', { bubbles: true }));\n    trigger.dispatchEvent(new MouseEvent('mouseup', { bubbles: true }));\n    trigger.dispatchEvent(new MouseEvent('click', { bubbles: true }));\n    return true;\n  });\n  if (!clicked) throw new Error('Alamat Domisili dropdown not found or not clickable');\n\n  // Wait for the modal to appear\n  await waitForDomStable(page, 500);\n}\n\n/**\n * Fill common input fields in the registration form (NIK, Nama, Nomor Whatsapp).\n * @param page Puppeteer page instance\n * @param item Data item containing input values\n */\nexport async function commonInput(page: Page, item: Partial<DataItem>) {\n  // Input <input id=\"nik\" type=\"text\" class=\"form-input border-gray-3 focus-within:border-black\" name=\"NIK\" placeholder=\"Masukkan NIK\" autocomplete=\"off\" maxlength=\"16\">\n  await page.focus('input[id=\"nik\"]');\n  await page.type('input[id=\"nik\"]', item.nik, { delay: 100 });\n\n  // Input <input id=\"Nama Lengkap\" type=\"text\" class=\"form-input border-gray-3 focus-within:border-black\" name=\"Nama\" placeholder=\"Masukkan nama lengkap\" autocomplete=\"off\" maxlength=\"300\">\n  await page.focus('input[id=\"Nama Lengkap\"]');\n  await page.type('input[id=\"Nama Lengkap\"]', item.nama, { delay: 100 });\n\n  // Input phone number <input id=\"No Whatsapp\" type=\"text\" class=\"w-full form-input rounded-l-none\" name=\"Nomor Whatsapp\" placeholder=\"Masukkan nomor whatsapp\" autocomplete=\"off\" maxlength=\"300\">\n  await page.focus('input[name=\"Nomor Whatsapp\"]');\n  await page.type('input[name=\"Nomor Whatsapp\"]', item.nomor_wa.replace(/^\\+62/, ''), { delay: 100 });\n\n  // input alamat <textarea id=\"detail-domisili\" type=\"text\" rows=\"3\" class=\"h-auto p-4 form-input border-gray-3 focus-within:border-black\" name=\"detail-domisili\" placeholder=\"Cth: Jl. Kenanga 14 no 92\" autocomplete=\"on\" maxlength=\"60\"></textarea>\n  await page.focus('textarea[id=\"detail-domisili\"]');\n  await page.type('textarea[id=\"detail-domisili\"]', item.alamat, { delay: 100 });\n}\n\n/**\n * Select pekerjaan (Pekerjaan) by clicking the SVG icon near the label and choosing the correct option.\n * @param page Puppeteer page instance\n * @param item Data item containing pekerjaan\n */\nexport async function selectPekerjaan(page: Page, item: Partial<DataItem>) {\n  // Map pekerjaan to a standardized value using regex patterns matching the button text\n  const pekerjaanPatterns = [\n    { re: /Belum\\/?Tidak Bekerja/i, value: 'Belum/Tidak Bekerja' },\n    { re: /Pelajar/i, value: 'Pelajar' },\n    { re: /Mahasiswa/i, value: 'Mahasiswa' },\n    { re: /Ibu Rumah Tangga/i, value: 'Ibu Rumah Tangga' },\n    { re: /TNI/i, value: 'TNI' },\n    { re: /POLRI/i, value: 'POLRI' },\n    { re: /ASN.*Kantor Pemerintah/i, value: 'ASN (Kantor Pemerintah)' },\n    { re: /Pegawai Swasta|wiraswasta/i, value: 'Pegawai Swasta' },\n    { re: /Wirausaha|Wiraswasta|Pekerja Mandiri/i, value: 'Wirausaha/Pekerja Mandiri' },\n    { re: /Pensiunan/i, value: 'Pensiunan' },\n    { re: /Pejabat Negara|Pejabat Daerah/i, value: 'Pejabat Negara / Pejabat Daerah' },\n    { re: /Pengusaha/i, value: 'Pengusaha' },\n    { re: /Dokter/i, value: 'Dokter' },\n    { re: /Bidan/i, value: 'Bidan' },\n    { re: /Perawat/i, value: 'Perawat' },\n    { re: /Apoteker/i, value: 'Apoteker' },\n    { re: /Psikolog/i, value: 'Psikolog' },\n    { re: /Tenaga Kesehatan Lainnya/i, value: 'Tenaga Kesehatan Lainnya' },\n    { re: /Dosen/i, value: 'Dosen' },\n    { re: /Guru/i, value: 'Guru' },\n    { re: /Peneliti/i, value: 'Peneliti' },\n    { re: /Pengacara/i, value: 'Pengacara' },\n    { re: /Notaris/i, value: 'Notaris' },\n    { re: /Hakim|Jaksa|Tenaga Peradilan/i, value: 'Hakim/Jaksa/Tenaga Peradilan Lainnya' },\n    { re: /Akuntan/i, value: 'Akuntan' },\n    { re: /Insinyur/i, value: 'Insinyur' },\n    { re: /Arsitek/i, value: 'Arsitek' },\n    { re: /Konsultan/i, value: 'Konsultan' },\n    { re: /Wartawan/i, value: 'Wartawan' },\n    { re: /Pedagang/i, value: 'Pedagang' },\n    { re: /Petani|Pekebun/i, value: 'Petani / Pekebun' },\n    { re: /Nelayan|Perikanan/i, value: 'Nelayan / Perikanan' },\n    { re: /Peternak/i, value: 'Peternak' },\n    { re: /Tokoh Agama/i, value: 'Tokoh Agama' },\n    { re: /Juru Masak/i, value: 'Juru Masak' },\n    { re: /Pelaut/i, value: 'Pelaut' },\n    { re: /Sopir/i, value: 'Sopir' },\n    { re: /Pilot/i, value: 'Pilot' },\n    { re: /Masinis/i, value: 'Masinis' },\n    { re: /Atlet/i, value: 'Atlet' },\n    { re: /Pekerja Seni/i, value: 'Pekerja Seni' },\n    { re: /Penjahit|Perancang Busana/i, value: 'Penjahit / Perancang Busana' },\n    { re: /Karyawan kantor|Pegawai Administratif/i, value: 'Karyawan kantor / Pegawai Administratif' },\n    { re: /Teknisi|Mekanik/i, value: 'Teknisi / Mekanik' },\n    { re: /Pekerja Pabrik|Buruh/i, value: 'Pekerja Pabrik / Buruh' },\n    { re: /Pekerja Konstruksi/i, value: 'Pekerja Konstruksi' },\n    { re: /Pekerja Pertukangan/i, value: 'Pekerja Pertukangan' },\n    { re: /Pekerja Migran/i, value: 'Pekerja Migran' },\n    { re: /Lainnya/i, value: 'Lainnya' }\n  ];\n\n  // Find standardized pekerjaan value\n  let pekerjaanValue = 'Lainnya';\n  for (const { re, value } of pekerjaanPatterns) {\n    if (re.test(item.pekerjaan)) {\n      pekerjaanValue = value;\n      break;\n    }\n  }\n\n  console.log(`[job] ${item.nik} - ${item.pekerjaan} -> ${pekerjaanValue}`);\n\n  // Click the SVG icon near the \"Pekerjaan\" label to open the dropdown\n  const clicked = await page.evaluate(() => {\n    // Find the label div\n    const allDivs = Array.from(document.querySelectorAll('div.font-semibold'));\n    const labelDiv = allDivs.find((div) => div.textContent && div.textContent.trim().startsWith('Pekerjaan'));\n    if (!labelDiv) return false;\n    // Find the nearest parent with class w-full or the next sibling with the dropdown\n    let container = labelDiv.parentElement;\n    // Find the .relative.flex container (dropdown root)\n    let dropdownContainer = null;\n    while (container && !dropdownContainer) {\n      dropdownContainer = Array.from(container.querySelectorAll('div.relative.flex'))[0];\n      if (!dropdownContainer) container = container.parentElement;\n    }\n    // Fallback: try next sibling if not found\n    if (!dropdownContainer && labelDiv.nextElementSibling) {\n      dropdownContainer = labelDiv.nextElementSibling;\n    }\n    if (!dropdownContainer) return false;\n    // Find the svg icon inside the container\n    const svg = dropdownContainer.querySelector('svg');\n    if (!svg) return false;\n    svg.dispatchEvent(new MouseEvent('mousedown', { bubbles: true }));\n    svg.dispatchEvent(new MouseEvent('mouseup', { bubbles: true }));\n    svg.dispatchEvent(new MouseEvent('click', { bubbles: true }));\n    return true;\n  });\n  if (!clicked) throw new Error('Pekerjaan SVG icon not found or not clickable');\n\n  // Wait for the dropdown to appear\n  await waitForDomStable(page, 500);\n\n  // Select the pekerjaan option in the modal by matching normalized text (case/space-insensitive)\n  await page.evaluate((pekerjaan) => {\n    function normalize(str) {\n      return str\n        .replace(/\\s+/g, ' ')\n        .replace(/\\s*\\/\\s*/g, '/')\n        .trim()\n        .toLowerCase();\n    }\n    const target = normalize(pekerjaan);\n    // Find the modal with z-9000 and look for divs with the button text\n    const modal = document.querySelector('div.z-9000, div[class*=\"z-9000\"]');\n    if (!modal) throw new Error('Pekerjaan modal not found');\n    const divs = Array.from(modal.querySelectorAll('div.flex.items-center.justify-between.gap-2'));\n    let found = false;\n    for (const div of divs) {\n      if (normalize(div.textContent) === target) {\n        // Click the parent button\n        const btn = div.closest('button');\n        if (btn) btn.click();\n        found = true;\n        break;\n      }\n    }\n    if (!found) throw new Error('Pekerjaan option not found in modal: ' + pekerjaan);\n  }, pekerjaanValue);\n}\n\n/**\n * Select gender (Jenis Kelamin) by clicking the SVG icon near the label and choosing the correct option.\n * @param page Puppeteer page instance\n * @param item Data item containing gender\n */\nexport async function selectGender(page: Page, item: Partial<DataItem>) {\n  // Select gender (Jenis Kelamin) by clicking the SVG icon near the label (from Puppeteer context)\n  const clickGenderDropdown = await page.evaluate(() => {\n    // Find the label div\n    const allDivs = Array.from(document.querySelectorAll('div.font-semibold'));\n    const labelDiv = allDivs.find((div) => div.textContent && div.textContent.trim().startsWith('Jenis Kelamin'));\n    if (!labelDiv) return false;\n    // Find the nearest parent with class w-full\n    let container = labelDiv;\n    while (container && (!container.classList || !container.classList.contains('w-full'))) {\n      container = container.parentElement;\n    }\n    if (!container) return false;\n    // Find the svg icon inside the container\n    const svg = container.querySelector('svg');\n    if (!svg) return false;\n    svg.dispatchEvent(new MouseEvent('mousedown', { bubbles: true }));\n    svg.dispatchEvent(new MouseEvent('mouseup', { bubbles: true }));\n    svg.dispatchEvent(new MouseEvent('click', { bubbles: true }));\n    return true;\n  });\n  if (!clickGenderDropdown) throw new Error('Jenis Kelamin SVG icon not found or not clickable');\n  // Simplified: select gender option from visible dropdown\n  await waitForDomStable(page, 500); // Wait for dropdown to appear\n  await page.evaluate((gender) => {\n    // Find all visible gender options in the dropdown\n    const dropdowns = Array.from(\n      document.querySelectorAll('div.z-2000, div[style*=\"z-index: 2000\"], div[style*=\"z-index:2000\"]')\n    );\n    let found = false;\n    for (const dropdown of dropdowns) {\n      const options = Array.from(dropdown.querySelectorAll('div.cursor-pointer'));\n      for (const opt of options) {\n        // Look for nested div with exact gender text\n        const match = Array.from(opt.querySelectorAll('div')).find(\n          (d) => d.textContent && d.textContent.trim() === gender\n        );\n        if (match) {\n          (opt as HTMLElement).click();\n          found = true;\n          break;\n        }\n      }\n      if (found) break;\n    }\n    if (!found) throw new Error('Gender option not found: ' + gender);\n  }, item.jenis_kelamin);\n}\n\nexport async function selectTanggalLahir(page: Page, item: Partial<DataItem>): Promise<void> {\n  /**\n   * Select a date in the datepicker popup.\n   * @param page Puppeteer page instance\n   * @param selector CSS selector for the datepicker container\n   * @param tanggal Date string in DD/MM/YYYY\n   */\n  async function selectDate(page: import('puppeteer').Page, selector: string, tanggal: string): Promise<void> {\n    const [day, month, year] = tanggal.split('/');\n    const bulan = ['', 'Jan', 'Feb', 'Mar', 'Apr', 'Mei', 'Jun', 'Jul', 'Agt', 'Sep', 'Okt', 'Nov', 'Des'];\n\n    // 1. Open datepicker\n    await page.click(`${selector} .mx-datepicker`);\n    await page.waitForSelector('.mx-calendar', { visible: true });\n\n    // --- YEAR ---\n    // Try to find the year panel directly (newer mx-datepicker uses .mx-calendar-panel-year)\n    const yearPanelSelector = '.mx-calendar .mx-calendar-year-panel, .mx-calendar.mx-calendar-panel-year';\n    // Try to find a year button to open the panel, but if already open, skip\n    const yearPanel = await page.$(yearPanelSelector);\n    if (!yearPanel) {\n      // Try multiple possible year buttons\n      const yearBtnSel = [\n        '.mx-calendar .mx-btn.mx-btn-text.mx-btn-year',\n        '.mx-calendar .mx-btn.mx-btn-text.mx-btn-current-year',\n        '.mx-calendar .mx-btn-year'\n      ].join(',');\n      const yearBtn = await page.$(yearBtnSel);\n      if (!yearBtn) throw new Error('Year button not found in datepicker');\n      await yearBtn.click();\n      await page.waitForSelector(yearPanelSelector, { visible: true });\n    }\n\n    // Now select the year\n    let foundYear = false;\n    while (!foundYear) {\n      // Try both old and new year panel structures\n      const years: string[] = await page.$$eval(\n        '.mx-calendar-year-panel td, .mx-calendar.mx-calendar-panel-year .mx-table-year td',\n        (els: Element[]) => els.map((el) => (el.textContent ?? '').trim())\n      );\n      if (years.includes(String(year))) {\n        await page.evaluate((year: string) => {\n          const yearCells = Array.from(\n            document.querySelectorAll(\n              '.mx-calendar-year-panel td, .mx-calendar.mx-calendar-panel-year .mx-table-year td'\n            )\n          );\n          const target = yearCells.find((td) => (td.textContent ?? '').trim() === String(year));\n          if (target) (target as HTMLElement).click();\n        }, year);\n        foundYear = true;\n      } else {\n        // Move panel left/right depending on target year\n        const nums = years.map(Number).filter(Boolean);\n        const min = Math.min(...nums);\n        const max = Math.max(...nums);\n        if (Number(year) < min) {\n          // Try both old and new prev buttons\n          const prevBtn = await page.$(\n            '.mx-calendar-year-panel .mx-btn-icon-double-left, .mx-calendar.mx-calendar-panel-year .mx-btn-icon-double-left'\n          );\n          if (prevBtn) await prevBtn.click();\n        } else if (Number(year) > max) {\n          const nextBtn = await page.$(\n            '.mx-calendar-year-panel .mx-btn-icon-double-right, .mx-calendar.mx-calendar-panel-year .mx-btn-icon-double-right'\n          );\n          if (nextBtn) await nextBtn.click();\n        } else {\n          throw new Error(`Year ${year} not in panel, but can't navigate`);\n        }\n        // Use a standard delay instead of page.waitForTimeout\n        await new Promise((resolve) => setTimeout(resolve, 200));\n      }\n    }\n\n    // --- MONTH ---\n    // Try to open month panel if not already in month selection mode\n    const monthPanelSelector = '.mx-calendar .mx-calendar-month-panel, .mx-calendar.mx-calendar-panel-month';\n    const monthPanel = await page.$(monthPanelSelector);\n    if (!monthPanel) {\n      // Try to find a month button to open the panel, but if already open, skip\n      const monthBtnSel = [\n        '.mx-calendar .mx-btn.mx-btn-text.mx-btn-month',\n        '.mx-calendar .mx-btn-month',\n        '.mx-calendar .mx-btn.mx-btn-current-year' // fallback: sometimes year button opens month panel\n      ].join(',');\n      const monthBtn = await page.$(monthBtnSel);\n      if (!monthBtn) throw new Error('Month button not found in datepicker');\n      await monthBtn.click();\n      await page.waitForSelector(monthPanelSelector, { visible: true });\n    }\n\n    // Now select the month\n    await page.evaluate((monthText: string) => {\n      // Try both old and new month panel structures\n      const monthCells = Array.from(\n        document.querySelectorAll(\n          '.mx-calendar-month-panel td, .mx-calendar.mx-calendar-panel-month .mx-table-month td'\n        )\n      );\n      const target = monthCells.find((td) => (td.textContent ?? '').trim().startsWith(monthText));\n      if (target) (target as HTMLElement).click();\n    }, bulan[Number(month)]);\n\n    // --- DAY ---\n    // Select the correct day cell by matching both the day number and the title attribute (YYYY-MM-DD)\n    const yyyy = year;\n    const mm = String(month).padStart(2, '0');\n    const dd = String(day).padStart(2, '0');\n    const targetDate = `${yyyy}-${mm}-${dd}`;\n    await page.evaluate(\n      (targetDate: string, day: string) => {\n        // Find all day cells in the current month\n        const dayCells = Array.from(document.querySelectorAll('.mx-table-date td.cell'));\n        const targetCell = dayCells.find(\n          (td) =>\n            td.getAttribute('title') === targetDate &&\n            td.querySelector('div') &&\n            (td.querySelector('div')!.textContent ?? '').trim() === String(Number(day))\n        );\n        if (targetCell) {\n          (targetCell as HTMLElement).click();\n        } else {\n          // fallback: try to click the button inside the cell if present\n          const btn = targetCell && targetCell.querySelector('button');\n          if (btn) (btn as HTMLElement).click();\n        }\n      },\n      targetDate,\n      day\n    );\n\n    await new Promise((resolve) => setTimeout(resolve, 300));\n  }\n\n  // Usage\n  await selectDate(page, '#Tanggal\\\\ Lahir', item.tanggal_lahir);\n}\n"]}