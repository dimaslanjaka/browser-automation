{"version":3,"sources":["../../src/runner/skrin.js"],"names":["dotenv","path","spawnAsync","enterSkriningPage","playMp3FromUrl","sleep","nikParse","moment","typeAndTrigger","appendLog","getNumbersOnly","isNikErrorVisible","waitEnter","isIdentityModalVisible","confirmIdentityModal","isNIKNotFoundModalVisible","geocodeWithNominatim","ucwords","getPersonInfo","fixTbAndBb","extractNumericWithComma","isElementExist","isElementVisible","isInvalidAlertVisible","isSuccessNotificationVisible","fetchXlsxData3","getPuppeteer","skrinLogin"],"mappings":"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","file":"skrin.cjs","sourcesContent":["import { spawnAsync } from 'cross-spawn';\nimport dotenv from 'dotenv';\nimport moment from 'moment';\nimport nikParse from 'nik-parser-jurusid';\nimport path from 'path';\nimport { geocodeWithNominatim } from '../address/nominatim.js';\nimport { playMp3FromUrl } from '../beep.js';\nimport { fetchXlsxData3 } from '../fetchXlsxData3.js';\nimport { getPuppeteer, isElementExist, isElementVisible, typeAndTrigger } from '../puppeteer_utils.js';\nimport { enterSkriningPage, skrinLogin } from '../skrin_puppeteer.js';\nimport {\n  confirmIdentityModal,\n  fixTbAndBb,\n  getPersonInfo,\n  isIdentityModalVisible,\n  isInvalidAlertVisible,\n  isNikErrorVisible,\n  isNIKNotFoundModalVisible,\n  isSuccessNotificationVisible\n} from '../skrin_utils.js';\nimport { appendLog, extractNumericWithComma, getNumbersOnly, sleep, waitEnter } from '../utils.js';\nimport { ucwords } from '../utils/string.js';\n\n// Load environment variables\ndotenv.config({ path: path.join(process.cwd(), '.env') });\n\n/**\n * Executes scripts to build and analyze the HTML log.\n *\n * Used to generate reports from the processing results by running `log-builder.js` and `log-analyzer.js`.\n *\n * @returns {Promise<void>} A promise that resolves when the log building process is complete.\n */\nasync function buildHtmlLog() {\n  await spawnAsync('node', [path.resolve(process.cwd(), 'log-builder.js')], {\n    cwd: process.cwd(),\n    stdio: 'inherit'\n  });\n  await spawnAsync('node', [path.resolve(process.cwd(), 'log-analyzer.js')], {\n    cwd: process.cwd(),\n    stdio: 'inherit'\n  });\n}\n\n/**\n * Processes a single row of Excel data by automating the form-filling process on the skrining site.\n *\n * Steps include navigating pages, inputting data, checking for various modals and alerts,\n * correcting job/location fields, and submitting the form.\n *\n * @async\n * @function processData\n * @param {import('puppeteer').Browser} browser - The Puppeteer browser instance used to open and interact with web pages.\n * @param {import('../../globals.js').ExcelRowData} data - A single row of Excel data to be submitted through the form.\n * @returns {Promise<{\n *   status: 'success' | 'error',\n *   reason?: 'invalid_nik_length' | 'data_not_found' | string,\n *   description?: string,\n *   data?: import('../../globals.js').ExcelRowData\n * }>} Result of the processing. On success, status is 'success' with the processed data. On failure, status is 'error' with reason and description.\n * @throws {Error} If required fields are missing or an unexpected state is encountered.\n */\nexport async function processData(browser, data) {\n  const page = await browser.newPage(); // Open new tab\n\n  // Close the first tab when there are more than 2 open tabs\n  const pages = await browser.pages(); // Get all open pages (tabs)\n  if (pages.length > 3) {\n    await pages[0].close(); // Close the first tab\n  }\n\n  try {\n    await enterSkriningPage(page);\n  } catch (e) {\n    await playMp3FromUrl('https://assets.mixkit.co/active_storage/sfx/1084/1084.wav').catch(console.error);\n    console.error('Error navigating to skrining page:', e.message);\n    // Repeat\n    return processData(browser, data);\n  }\n\n  await page.waitForSelector('#nik', { visible: true });\n  await sleep(3000);\n\n  if (!data) {\n    throw new Error('No more data to process.');\n  }\n  if (!data.parsed_nik || (typeof data.parsed_nik === 'object' && Object.keys(data.parsed_nik).length === 0)) {\n    console.log(`Parsed NIK is empty for NIK: ${data.nik}, reparsing...`);\n    data.parsed_nik = nikParse(data.nik).data;\n  }\n\n  console.log('Processing:', data);\n\n  if (!`${data.tanggal}`.includes('/') || !data.tanggal || data.tanggal.length < 8) {\n    await browser.close();\n    throw new Error(`INVALID DATE ${JSON.stringify(data, null, 2)}`);\n  }\n\n  const parseTanggal = moment(data.tanggal, 'DD/MM/YYYY', true); // strict parsing\n\n  if (!parseTanggal.isValid()) {\n    await browser.close();\n    throw new Error(`INVALID DATE ${JSON.stringify(data, null, 2)}`);\n  }\n\n  if (parseTanggal.day() === 0) {\n    // Sunday\n    await browser.close();\n    throw new Error(`SUNDAY DATE NOT ALLOWED: ${data.tanggal}`);\n  }\n\n  await page.$eval('#dt_tgl_skrining', (el) => el.removeAttribute('readonly'));\n  await typeAndTrigger(page, '#dt_tgl_skrining', data.tanggal);\n  await page.$eval('#dt_tgl_skrining', (el) => el.setAttribute('readonly', 'true'));\n  await typeAndTrigger(page, 'input[name=\"metode_id_input\"]', 'Tunggal');\n  await typeAndTrigger(page, 'input[name=\"tempat_skrining_id_input\"]', 'Puskesmas');\n\n  if (data.nik.length < 16) {\n    console.error('Skipping due NIK length invalid, should be 16 digits.');\n    appendLog(data, 'Invalid Data');\n    // Build HTML log\n    buildHtmlLog();\n    return {\n      status: 'error',\n      reason: 'invalid_nik_length',\n      description: 'Skipping due NIK length invalid, should be 16 digits.'\n    };\n  }\n\n  await typeAndTrigger(page, '#nik', getNumbersOnly(data.nik));\n\n  await sleep(5000);\n\n  // Check if the ID modal appears\n  try {\n    await page.waitForSelector('.k-widget.k-window.k-window-maximized', { timeout: 5000 });\n    // console.log('Modal is visible');\n  } catch (_e) {\n    // console.log('Modal did not appear');\n  }\n\n  try {\n    await page.waitForSelector('[aria-labelledby=\"dialogconfirm_wnd_title\"]', { visible: true, timeout: 5000 });\n  } catch (_e) {\n    //\n  }\n\n  console.log('Is NIK error notification visible:', await isNikErrorVisible(page));\n  if (await isNikErrorVisible(page)) {\n    waitEnter('Please check NIK error notification. Press Enter to continue...');\n    throw new Error('NIK error notification visible, please re-check. Aborting...');\n  }\n\n  console.log('Identity modal is visible:', await isIdentityModalVisible(page));\n\n  if (await isIdentityModalVisible(page)) {\n    await confirmIdentityModal(page);\n  }\n\n  // Check if NIK not found modal visible\n  const isNikNotFound = await isNIKNotFoundModalVisible(page);\n  console.log('Is NIK not found modal visible:', isNikNotFound);\n\n  if (isNikNotFound) {\n    // Input manual data from parsed NIK if available\n\n    const shouldClickYes = await page.evaluate(() => {\n      const dialog = document.querySelector('#dialogconfirm');\n      if (!dialog) return false;\n\n      const text = (dialog.innerText || dialog.textContent || '').toLowerCase();\n      return (\n        text.includes('access to resources is temporary closed'.toLowerCase()) &&\n        text.includes('Apakah Anda akan melanjutkan penginputan manual?'.toLowerCase())\n      );\n    });\n\n    if (shouldClickYes) {\n      await page.click('#yesButton');\n\n      if (!data.nama || data.nama.length === 0) {\n        throw new Error(\"❌ Failed to take the patient's name\");\n      }\n      await typeAndTrigger(page, '#field_item_nama_peserta input[type=\"text\"]', data.nama);\n\n      if (!data.parsed_nik) {\n        throw new Error('❌ Failed to parse NIK data');\n      }\n      const parsed_nik_gender = data.parsed_nik.kelamin.toLowerCase() == 'laki-laki' ? 'Laki-laki' : 'Perempuan';\n      console.log(`Gender ${parsed_nik_gender} detected from NIK`);\n      await typeAndTrigger(page, '#field_item_jenis_kelamin_id input[type=\"text\"]', parsed_nik_gender);\n\n      // Validate final birth date format to ensure it's in DD/MM/YYYY\n      // If invalid, throw an error with context for easier debugging\n      const parsedLahir = moment(data.tgl_lahir, ['DD/MM/YYYY', 'YYYY-MM-DD'], true);\n      if (!parsedLahir.isValid()) {\n        throw new Error(`❌ Invalid birth date format from NIK, expected DD/MM/YYYY, got: ${data.tgl_lahir}`);\n      }\n\n      await typeAndTrigger(page, '#field_item_tgl_lahir input[type=\"text\"]', parsedLahir.format('DD/MM/YYYY'));\n\n      if (!data.alamat || data.alamat.length === 0) {\n        throw new Error(\"❌ Failed to take the patient's address\");\n      }\n\n      const keywordAddr = `${data.alamat} Surabaya, Jawa Timur`.trim();\n      const address = await geocodeWithNominatim(keywordAddr);\n      data._address = address;\n\n      let { kotakab = '', kecamatan = '', provinsi = '', kelurahan = '' } = data.parsed_nik;\n\n      if (kotakab.length === 0 || kecamatan.length === 0 || provinsi.length === 0) {\n        console.log(`Fetching address from Nominatim for: ${keywordAddr}`);\n        console.log('Nominatim result:', address);\n\n        const addr = address.address || {};\n\n        if (kelurahan.length === 0) kelurahan = addr.village || addr.hamlet || '';\n        if (kecamatan.length === 0) kecamatan = addr.suburb || addr.city_district || '';\n        if (kotakab.length === 0) kotakab = addr.city || addr.town || addr.village || 'Kota Surabaya';\n        if (provinsi.length === 0) provinsi = addr.state || addr.province || 'Jawa Timur';\n\n        if (kotakab.toLowerCase().includes('surabaya')) {\n          kotakab = 'Kota Surabaya';\n        }\n\n        if (kotakab.length === 0 || kecamatan.length === 0) {\n          throw new Error(\"❌ Failed to take the patient's city or town\");\n        }\n      }\n\n      // Input provinsi -> kabupaten -> kecamatan -> kelurahan -> alamat\n      await typeAndTrigger(page, '#field_item_provinsi_ktp_id input[type=\"text\"]', ucwords(provinsi));\n      await typeAndTrigger(page, '#field_item_kabupaten_ktp_id input[type=\"text\"]', ucwords(kotakab));\n      await typeAndTrigger(page, '#field_item_kecamatan_ktp_id input[type=\"text\"]', ucwords(kecamatan));\n      await typeAndTrigger(page, '#field_item_kelurahan_ktp_id input[type=\"text\"]', ucwords(kelurahan));\n      await typeAndTrigger(page, '#field_item_alamat_ktp textarea[type=\"text\"]', data.alamat);\n    } else {\n      // If the modal does not contain the expected text, we assume it's a different issue\n      return {\n        status: 'error',\n        reason: 'data_not_found',\n        description: 'Skipping due data not found'\n      };\n    }\n  }\n\n  const nama = await page.evaluate(() => document.querySelector('input[name=\"nama_peserta\"]')?.value);\n  data.nama = `${nama}`.trim();\n  // re-check\n  if (`${data.nama}`.trim().length === 0) {\n    throw new Error(\"❌ Failed to take the patient's name\");\n  }\n\n  const { gender, age, birthDate, location } = await getPersonInfo(page);\n  const { province, city } = location;\n  data.gender = gender;\n  data.tgl_lahir = birthDate;\n  data.umur = age;\n  console.log('Jenis kelamin:', gender, 'Umur:', age, 'tahun');\n  if (!gender || isNaN(age)) {\n    throw new Error('Invalid input: Gender or age is missing/invalid.');\n  }\n\n  // Fix if location data is empty\n  console.log(`Provinsi: ${province}`, province.length == 0 ? '(empty)' : '');\n  if (province.length == 0) {\n    await typeAndTrigger(page, '#field_item_provinsi_ktp_id input[type=\"text\"]', 'Jawa Timur');\n  }\n\n  console.log(`Kabupaten/Kota: ${city}`, city.length == 0 ? '(empty)' : '');\n  if (city.length == 0) {\n    await typeAndTrigger(page, '#field_item_kabupaten_ktp_id input[type=\"text\"]', 'Kota Surabaya');\n  }\n\n  // Fix job\n  data.pekerjaan_original = data.pekerjaan;\n\n  const job = data.pekerjaan.trim().toLowerCase();\n\n  const jobMappings = [\n    { pattern: /rumah\\s*tangga|irt/, value: 'IRT' },\n    { pattern: /swasta|pedagang/, value: 'Wiraswasta' },\n    { pattern: /tukang|buruh/, value: 'Buruh ' },\n    { pattern: /tidak\\s*bekerja|belum\\s*bekerja|pensiun/, value: 'Tidak Bekerja' },\n    { pattern: /pegawai\\s*negeri(\\s*sipil)?|pegawai\\s*negri/, value: 'PNS ' },\n    { pattern: /guru|dosen/, value: 'Guru/ Dosen' },\n    { pattern: /perawat|dokter/, value: 'Tenaga Profesional Medis ' },\n    { pattern: /pengacara|wartawan/, value: 'Tenaga Profesional Non Medis ' },\n    { pattern: /pelajar|siswa|siswi|sekolah/, value: 'Pelajar/ Mahasiswa' },\n    { pattern: /s[o,u]pir/, value: 'Sopir ' }\n  ];\n\n  let jobMatched = false;\n\n  for (const { pattern, value } of jobMappings) {\n    if (pattern.test(job)) {\n      data.pekerjaan = value;\n      jobMatched = true;\n      break;\n    }\n  }\n\n  if (!jobMatched) {\n    if (job === 'unspecified' || job === 'lainnya' || job.length === 0) {\n      if (age > 55 || age <= 20) {\n        data.pekerjaan = 'Tidak Bekerja';\n      } else {\n        data.pekerjaan = gender.toLowerCase() === 'perempuan' ? 'IRT' : 'Wiraswasta';\n      }\n    } else {\n      await waitEnter(\n        `Undefined Job for data: ${JSON.stringify(data)}. Please fix and press enter to continue auto fill.`\n      );\n    }\n  }\n\n  console.log(`Pekerjaan: ${data.pekerjaan}`);\n\n  await typeAndTrigger(page, 'input[name=\"pekerjaan_id_input\"]', data.pekerjaan);\n\n  // Fix tinggi dan berat badan\n  if (!data.bb || !data.tb) {\n    await fixTbAndBb(page, age, gender);\n  } else {\n    await page.focus('#field_item_berat_badan input[type=\"text\"]');\n    await page.type('#field_item_berat_badan input[type=\"text\"]', extractNumericWithComma(data.bb), { delay: 100 });\n    await page.focus('#field_item_tinggi_badan input[type=\"text\"]');\n    await page.type('#field_item_tinggi_badan input[type=\"text\"]', extractNumericWithComma(data.tb), { delay: 100 });\n  }\n\n  await typeAndTrigger(page, '#field_item_riwayat_kontak_tb_id input[type=\"text\"]', 'Tidak');\n  await typeAndTrigger(page, '#field_item_risiko_1_id input[type=\"text\"]', 'Tidak');\n  await typeAndTrigger(page, '#field_item_risiko_4_id input[type=\"text\"]', 'Tidak');\n  await typeAndTrigger(page, '#field_item_risiko_5_id input[type=\"text\"]', 'Tidak');\n\n  if (data.diabetes) {\n    await typeAndTrigger(page, '#field_item_risiko_6_id input[type=\"text\"]', 'Ya');\n  } else {\n    await typeAndTrigger(page, '#field_item_risiko_6_id input[type=\"text\"]', 'Tidak');\n  }\n\n  await typeAndTrigger(page, '#field_item_risiko_7_id input[type=\"text\"]', 'Tidak');\n\n  if (gender.toLowerCase().trim() == 'perempuan') {\n    await typeAndTrigger(page, '#field_item_risiko_9_id input[type=\"text\"]', 'Tidak');\n  }\n\n  await typeAndTrigger(page, '#field_item_risiko_10_id input[type=\"text\"]', 'Tidak');\n  await typeAndTrigger(page, '#field_item_risiko_11_id input[type=\"text\"]', 'Tidak');\n  await typeAndTrigger(page, '#field_item_gejala_2_3_id input[type=\"text\"]', 'Tidak');\n  await typeAndTrigger(page, '#field_item_gejala_2_4_id input[type=\"text\"]', 'Tidak');\n  await typeAndTrigger(page, '#field_item_gejala_2_5_id input[type=\"text\"]', 'Tidak');\n  await typeAndTrigger(page, '#field_item_gejala_6_id input[type=\"text\"]', 'Tidak');\n  await typeAndTrigger(page, '#field_item_cxr_pemeriksaan_id input[type=\"text\"]', 'Tidak');\n\n  if (age < 18) {\n    const gejalaBalitaSelectors = [\n      '#field_item_gejala_1_1_id input[type=\"text\"]',\n      '#field_item_gejala_1_3_id input[type=\"text\"]',\n      '#form_item_gejala_1_4_id input[type=\"text\"]',\n      '#field_item_gejala_1_5_id input[type=\"text\"]'\n    ];\n\n    for (const gejalaBalitaSelector of gejalaBalitaSelectors) {\n      if (isElementExist(page, gejalaBalitaSelector)) {\n        console.log(\n          `Gejala balita ${gejalaBalitaSelector} is visible ${await isElementVisible(page, gejalaBalitaSelector)}`\n        );\n\n        if (await isElementVisible(page, gejalaBalitaSelector)) {\n          await typeAndTrigger(page, gejalaBalitaSelector, 'Tidak');\n          await sleep(200);\n        }\n      }\n    }\n  }\n\n  await page.keyboard.press('Tab');\n\n  if (!data.batuk) {\n    await typeAndTrigger(page, '#field_item_gejala_2_1_id input[type=\"text\"]', 'Tidak');\n  } else {\n    let keteranganBatuk = data.batuk.replace(/ya,/, 'batuk');\n    if (/\\d/m.test(keteranganBatuk)) {\n      await typeAndTrigger(page, '#field_item_keterangan textarea', keteranganBatuk);\n      await waitEnter('Please fix data batuk/demam. Press Enter to continue...');\n    }\n  }\n\n  await sleep(2000);\n\n  // Re-check if the identity modal is visible\n  while (await isIdentityModalVisible(page)) {\n    // Confirm identity modal\n    await confirmIdentityModal(page);\n    await sleep(1000);\n    // Re-check\n    if (await isIdentityModalVisible(page)) {\n      await waitEnter('Please check identity modal. Press Enter to continue...');\n    }\n  }\n\n  // Check if the invalid element alert is visible\n  while (await isInvalidAlertVisible(page)) {\n    // Solve common problems\n    await typeAndTrigger(page, 'input[name=\"metode_id_input\"]', 'Tunggal');\n    await typeAndTrigger(page, 'input[name=\"tempat_skrining_id_input\"]', 'Puskesmas');\n    await typeAndTrigger(page, 'input[name=\"pekerjaan_id_input\"]', data.pekerjaan);\n\n    // Re-check\n    if (await isInvalidAlertVisible(page)) {\n      console.warn('⚠️ Invalid alert detected for the following data:');\n      console.dir(data, { depth: null });\n      await waitEnter('Please review the alert and press Enter to continue...');\n    }\n  }\n\n  // Auto submit\n  let hasSubmitted;\n  const identityModalVisible = await isIdentityModalVisible(page);\n  const invalidAlertVisible = await isInvalidAlertVisible(page);\n  const nikErrorVisible = await isNikErrorVisible(page);\n  const nikNotFoundModalVisible = await isNIKNotFoundModalVisible(page);\n\n  console.log('identityModalVisible:', identityModalVisible);\n  console.log('invalidAlertVisible:', invalidAlertVisible);\n  console.log('nikErrorVisible:', nikErrorVisible);\n  console.log('nikNotFoundModalVisible:', nikNotFoundModalVisible);\n\n  const isAllowedToSubmit =\n    !identityModalVisible && !invalidAlertVisible && !nikErrorVisible && !nikNotFoundModalVisible;\n  console.log('isAllowedToSubmit:', isAllowedToSubmit);\n  if (isAllowedToSubmit) {\n    // Clck the save button\n    console.log('Clicking the save button...');\n    await page.$eval('#save', (el) => el.scrollIntoView());\n    await page.evaluate(() => {\n      const el = document.querySelector('#save');\n      if (el) {\n        el.dispatchEvent(new MouseEvent('click', { bubbles: true, cancelable: true, view: window }));\n      }\n    });\n\n    await sleep(1000);\n    try {\n      // Wait for the confirmation modal to appear\n      await page.waitForSelector('#yesButton', { visible: true });\n      // Click the \"Ya\" button\n      await page.click('#yesButton');\n    } catch (_) {\n      // Fail sending data, press manually\n      waitEnter(\n        'Failed to click #yesButton for confirmation modal. Please click the button manually, then press Enter to continue...'\n      );\n    }\n\n    await sleep(1000);\n    while (true) {\n      const isSuccessVisible = await isSuccessNotificationVisible(page);\n      if (isSuccessVisible) {\n        console.log('✅ Success notification is visible');\n        break;\n      }\n      // Optional: wait a bit to avoid tight loop\n      await new Promise((r) => setTimeout(r, 1000));\n      if (Date.now() % 5000 < 1000) {\n        console.log('Waiting for success notification modal to be visible...');\n      }\n    }\n\n    hasSubmitted = true;\n  } else {\n    hasSubmitted = false;\n  }\n\n  if (hasSubmitted) {\n    console.log('✅\\tData submitted successfully:', data);\n  } else {\n    console.warn('⚠️\\tData processed but not submitted:', data);\n    await waitEnter('Press Enter to continue...');\n  }\n\n  return {\n    status: 'success',\n    data\n  };\n}\n\n/**\n * Main function to automate processing of multiple rows of Excel data for skrining entry.\n *\n * Logs into the web application, iterates through the data entries, and processes each one using `processData`.\n * Optionally allows transformation of each row of data through a callback before processing.\n *\n * @param {(data: import('../../globals.js').ExcelRowData) => import('../../globals.js').ExcelRowData | Promise<import('../../globals.js').ExcelRowData>} [dataCallback]\n *   A callback to optionally transform each Excel data row before processing. Can be synchronous or asynchronous.\n *   Defaults to an identity function if not provided.\n * @returns {Promise<void>} A promise that resolves when all data entries are processed and the browser is closed.\n */\nexport async function runEntrySkrining(dataCallback = (data) => data) {\n  // const datas = getXlsxData(process.env.index_start, process.env.index_end);\n  const datas = await fetchXlsxData3(process.env.index_start, process.env.index_end);\n  const puppeteer = await getPuppeteer();\n  let page = puppeteer.page;\n  const browser = puppeteer.browser;\n\n  await skrinLogin(page);\n\n  while (datas.length > 0) {\n    /**\n     * @type {import('../../globals.js').ExcelRowData}\n     */\n    let data = await dataCallback(datas.shift()); // <-- modify the data via callback\n    const result = await processData(browser, data);\n    if (result.status == 'error') {\n      console.error(Object.assign(result, { data }));\n      break;\n    } else {\n      appendLog(data);\n\n      // Build HTML log\n      await buildHtmlLog();\n    }\n  }\n\n  console.log('All data processed.');\n\n  // Build HTML log\n  buildHtmlLog();\n\n  // Close browser\n  await browser.close();\n}\n\n// if (process.argv[1] === __filename) runEntrySkrining().catch(console.error);\n"]}