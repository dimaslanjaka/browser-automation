{"version":3,"sources":["../../src/runner/sehatindonesiaku-index.ts"],"names":["minimist","spawnAsync","noop","getSehatIndonesiaKuDb","getPuppeteer","getExcelData","array_shuffle","sleep","closeFirstTab","processRegistrasiData","ansiColors","processKehadiranData","ErrorDataKehadiranNotFound","array_unique","DataTidakSesuaiKTPError","PembatasanUmurError","UnauthorizedError","TanggalPemeriksaanError","SqlError","enterSehatIndonesiaKu","waitForDomStable","searchNik","checkAlreadyHadir"],"mappings":"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","file":"sehatindonesiaku-index.cjs","sourcesContent":["import ansiColors from 'ansi-colors';\nimport { spawnAsync } from 'cross-spawn';\nimport { SqlError } from 'mariadb';\nimport minimist from 'minimist';\nimport { Page } from 'puppeteer';\nimport { array_shuffle, array_unique } from 'sbg-utility';\nimport { LogEntry } from '../database/BaseLogDatabase.js';\nimport { closeFirstTab, getPuppeteer, waitForDomStable } from '../puppeteer_utils.js';\nimport { noop, sleep } from '../utils-browser.js';\nimport { getExcelData, getSehatIndonesiaKuDb } from './sehatindonesiaku-data.js';\nimport {\n  DataTidakSesuaiKTPError,\n  ErrorDataKehadiranNotFound,\n  PembatasanUmurError,\n  TanggalPemeriksaanError,\n  UnauthorizedError\n} from './sehatindonesiaku-errors.js';\nimport { checkAlreadyHadir, processKehadiranData, searchNik } from './sehatindonesiaku-kehadiran.js';\nimport { processRegistrasiData } from './sehatindonesiaku-registrasi.js';\nimport { enterSehatIndonesiaKu } from './sehatindonesiaku-utils.js';\nimport { DataItem } from './types.js';\n\nconst args = minimist(process.argv.slice(2), {\n  boolean: ['help', 'single', 'shuffle', 'priority'],\n  alias: { h: 'help', s: 'single', sh: 'shuffle', prior: 'priority' },\n  default: { single: false, shuffle: false, priority: false }\n});\n\nasync function main() {\n  // Enable unicode\n  await spawnAsync('chcp', ['65001']).catch(noop);\n  // Initialize database\n  const db = await getSehatIndonesiaKuDb();\n\n  let needLogin = false;\n  const { browser } = await getPuppeteer();\n  // Handle browser closed event to exit process\n  browser.on('disconnected', () => {\n    process.exit(0);\n  });\n\n  let allData = await getExcelData();\n\n  if (args.shuffle) {\n    // Shuffle array\n    allData = array_shuffle(allData);\n  }\n\n  if (args.single) {\n    allData = allData.slice(0, 1);\n  }\n\n  for (let i = 0; i < allData.length; i++) {\n    let pages = await browser.pages();\n    while (pages.length > 3) {\n      console.log(`Too many pages open (${pages.length}), closing oldest...`);\n      await pages[0].close(); // Close the first page if exists\n      await sleep(1000); // Wait a bit for the browser to stabilize\n      pages = await browser.pages(); // Refresh the pages list\n    }\n\n    const item = allData[i];\n\n    if (!item.nik) {\n      const msg = `NIK kosong pada index ${i}`;\n      console.log(`⚠️  ${msg}`);\n      continue;\n    }\n\n    if (!item.tanggal_lahir) {\n      const msg = `Tanggal Lahir kosong`;\n      console.log(`⚠️  ${item.nik} - ${msg}`);\n      continue;\n    }\n\n    const dbItem: Partial<LogEntry<DataItem>> = (await db.getLogById(item.nik)) ?? {};\n\n    if (args.priority) {\n      // Priority mode: move already processed item to the end of the list\n      if (dbItem.data?.hadir && dbItem.data?.registered) {\n        allData.push(item); // Move to end\n        allData.splice(i, 1); // Remove from current position\n        i--; // Adjust index to account for removed item\n        console.log(`📝 ${item.nik} - Already processed, moving to end of the list`);\n        continue;\n      }\n    }\n\n    // Skip already processed items\n    if (dbItem.data?.hadir && dbItem.data?.registered) {\n      console.log(`📝 ${item.nik} - Already processed`);\n      continue;\n    }\n\n    try {\n      console.log(`📝 ${item.nik} - Checking login status`);\n      await checkLoginStatus(await browser.newPage());\n      await closeFirstTab(browser);\n\n      console.log(`🔍 ${item.nik} - Checking registered status`);\n      await checkRegisteredStatus(await browser.newPage(), item, db);\n      await closeFirstTab(browser);\n\n      console.log(`📝 ${item.nik} - Processing registration`);\n      await processRegistrasiData(await browser.newPage(), item, db);\n      console.log(`✅ ${item.nik} - ${ansiColors.green('Successfully registered')}`);\n      await closeFirstTab(browser);\n\n      console.log(`📝 ${item.nik} - Processing attendance`);\n      await processKehadiranData(await browser.newPage(), item, db);\n      console.log(`✅ ${item.nik} - ${ansiColors.green('Successfully processed attendance')}`);\n      await closeFirstTab(browser);\n    } catch (e) {\n      const message = (dbItem?.message ?? '').split(',');\n      if (e instanceof AlreadyHadir) {\n        continue;\n      } else if (e instanceof ErrorDataKehadiranNotFound) {\n        console.error(`${item.nik} - Error: Data Kehadiran not found.`);\n        message.push('Data Kehadiran not found');\n        await db.addLog({\n          id: item.nik,\n          data: { ...item, hadir: false },\n          message: array_unique(message).join(',')\n        });\n        continue; // Continue to next item\n      } else if (e instanceof DataTidakSesuaiKTPError) {\n        console.warn(`${item.nik} - ${ansiColors.red('Data tidak sesuai KTP')}`);\n        message.push('Data tidak sesuai KTP');\n        await db.addLog({\n          id: item.nik,\n          message: array_unique(message).join(','),\n          data: { registered: false, ...item }\n        });\n        continue; // Skip this item and continue with the next\n      } else if (e instanceof PembatasanUmurError) {\n        console.warn(`Pembatasan umur untuk NIK ${item.nik}:`);\n        message.push('Pembatasan umur');\n        await db.addLog({\n          id: item.nik,\n          message: array_unique(message).join(','),\n          data: { registered: false, ...item }\n        });\n        continue; // Skip this item and continue with the next\n      } else if (e instanceof UnauthorizedError) {\n        needLogin = true;\n        console.warn(\n          `${ansiColors.redBright('Login required')}, please ${ansiColors.bold('login manually')} from opened browser. (close browser manual)`\n        );\n        break;\n      } else if (e instanceof TanggalPemeriksaanError) {\n        console.warn(`${item.nik} - ${ansiColors.red('Tanggal Pemeriksaan tidak valid')}: ${item.tanggal_pemeriksaan}`);\n        message.push(`Tanggal Pemeriksaan tidak valid. ${item.tanggal_pemeriksaan}`);\n        await db.addLog({\n          id: item.nik,\n          message: array_unique(message).join(','),\n          data: { registered: false, ...item }\n        });\n        continue;\n      } else if (e instanceof SqlError) {\n        console.error(`SQL Error for NIK ${item.nik}:`, e.message);\n        if ('sql' in e) {\n          console.error('SQL:', e.sql);\n        }\n        console.error(e.stack);\n        break;\n      }\n      console.error(`Error processing data for NIK ${item.nik}:`, e);\n    }\n\n    // break; // Only process one item for now (development mode)\n  }\n\n  if (!needLogin) {\n    console.log('All items processed successfully');\n    await browser.close();\n    process.exit(0);\n  }\n}\n\nasync function checkLoginStatus(page: Page) {\n  if (!(await enterSehatIndonesiaKu(page))) {\n    throw new UnauthorizedError();\n  }\n}\n\nasync function checkRegisteredStatus(page: Page, item: DataItem, db) {\n  await page.goto('https://sehatindonesiaku.kemkes.go.id/ckg-pendaftaran-individu', { waitUntil: 'networkidle2' });\n  await waitForDomStable(page, 500, 10000);\n  await searchNik(page, item.nik);\n  if (await checkAlreadyHadir(page, item, db)) {\n    const dbItem = (await db.getLogById(item.nik)) ?? ({} as LogEntry<DataItem>);\n    const messages = (dbItem?.message ?? '').split(',');\n    messages.push('Data sudah hadir');\n    await db.addLog({\n      id: item.nik,\n      // Marked as hadir is same as already registered\n      data: { ...item, hadir: true, registered: true },\n      message: array_unique(messages).join(',')\n    });\n    throw new AlreadyHadir();\n  }\n}\n\nclass AlreadyHadir extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = 'AlreadyHadir';\n  }\n}\n\nif (process.argv.some((arg) => /sehatindonesiaku-index\\.(js|cjs|ts|mjs)$/.test(arg))) {\n  main().catch(console.error);\n}\n"]}