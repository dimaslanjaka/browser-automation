{"version":3,"sources":["../../src/runner/sehatindonesiaku-cleanDB.ts"],"names":["minimist","getExcelData","sleep","fs","normalizePathUnix","getSehatIndonesiaKuDb"],"mappings":";;;;;;;;;;;;;AAOA,MAAM,IAAA,GAAOA,yBAAA,CAAS,OAAA,CAAQ,IAAA,CAAK,KAAA,CAAM,CAAC,CAAA,EAAG,EAAE,KAAA,EAAO,EAAE,CAAA,EAAG,MAAA,IAAU,CAAA;AAErE,eAAe,KAAK,EAAA,EAAiB;AACnC,EAAA,IAAI,OAAA,GAAU,MAAMC,oCAAA,EAAa;AACjC,EAAA,IAAI,KAAK,GAAA,EAAK;AACZ,IAAA,OAAA,GAAU,QAAQ,MAAA,CAAO,CAAC,SAAS,IAAA,CAAK,GAAA,KAAQ,KAAK,GAAG,CAAA;AAAA,EAC1D;AACA,EAAA,KAAA,MAAW,QAAQ,OAAA,EAAS;AAC1B,IAAA,OAAA,CAAQ,GAAA,CAAI,CAAA,EAAG,IAAA,CAAK,GAAG,CAAA,wBAAA,CAA0B,CAAA;AACjD,IAAA,MAAM,EAAA,CAAG,SAAA,CAAU,IAAA,CAAK,GAAG,CAAA;AAC3B,IAAA,MAAMC,sBAAM,GAAG,CAAA;AAAA,EACjB;AACA,EAAA,IAAI,GAAG,YAAA,IAAgBC,mBAAA,CAAG,UAAA,CAAW,EAAA,CAAG,YAAY,CAAA,EAAG;AACrD,IAAA,MAAM,GAAG,KAAA,EAAM;AACf,IAAA,OAAA,CAAQ,GAAA,CAAI,CAAA,+BAAA,EAAkC,EAAA,CAAG,YAAY,CAAA,CAAE,CAAA;AAC/D,IAAA,MAAMA,oBAAG,MAAA,CAAO,EAAA,CAAG,YAAY,CAAA,CAAE,KAAA,CAAM,CAAC,KAAA,KAAU;AAChD,MAAA,OAAA,CAAQ,KAAA,CAAM,+BAAA,EAAkC,KAAA,CAAgB,OAAO,CAAA;AAAA,IACzE,CAAC,CAAA;AAAA,EACH;AACF;AAEA,SAAS,QAAA,GAAW;AAClB,EAAA,MAAM,CAAC,IAAA,EAAM,MAAM,CAAA,GAAI,OAAA,CAAQ,IAAA;AAC/B,EAAA,OAAA,CAAQ,GAAA,CAAI,UAAUC,4BAAA,CAAkB,IAAI,CAAC,CAAA,CAAA,EAAIA,4BAAA,CAAkB,MAAM,CAAC,CAAA,UAAA,CAAY,CAAA;AACtF,EAAA,OAAA,CAAQ,IAAI,EAAE,CAAA;AACd,EAAA,OAAA,CAAQ,IAAI,cAAc,CAAA;AAC1B,EAAA,OAAA,CAAQ,IAAI,sDAAsD,CAAA;AAClE,EAAA,OAAA,CAAQ,IAAI,EAAE,CAAA;AACd,EAAA,OAAA,CAAQ,IAAI,UAAU,CAAA;AACtB,EAAA,OAAA,CAAQ,IAAI,6CAA6C,CAAA;AACzD,EAAA,OAAA,CAAQ,IAAI,4DAA4D,CAAA;AACxE,EAAA,OAAA,CAAQ,IAAI,EAAE,CAAA;AACd,EAAA,OAAA,CAAQ,IAAI,WAAW,CAAA;AACvB,EAAA,OAAA,CAAQ,IAAI,4BAA4B,CAAA;AACxC,EAAA,OAAA,CAAQ,IAAI,mDAAmD,CAAA;AACjE;AAEA,IAAI,OAAA,CAAQ,KAAK,IAAA,CAAK,CAAC,QAAQ,4CAAA,CAA6C,IAAA,CAAK,GAAG,CAAC,CAAA,EAAG;AACtF,EAAA,CAAC,YAAY;AACX,IAAA,IAAI,EAAA;AACJ,IAAA,IAAI;AACF,MAAA,IAAI,IAAA,CAAK,IAAA,IAAQ,IAAA,CAAK,CAAA,EAAG;AACvB,QAAA,QAAA,EAAS;AACT,QAAA;AAAA,MACF;AACA,MAAA,EAAA,GAAK,MAAMC,6CAAA,EAAsB;AACjC,MAAA,MAAM,KAAK,EAAE,CAAA;AAAA,IACf,CAAA,SAAE;AACA,MAAA,IAAI,EAAA,EAAI,MAAM,EAAA,CAAG,KAAA,EAAM;AAAA,IACzB;AAAA,EACF,CAAA,GAAG;AACL","file":"sehatindonesiaku-cleanDB.cjs","sourcesContent":["import minimist from 'minimist';\nimport { normalizePathUnix } from 'sbg-utility';\nimport { sleep } from '../utils-browser.js';\nimport { getExcelData, getSehatIndonesiaKuDb } from './sehatindonesiaku-data.js';\nimport fs from 'fs-extra';\nimport { LogDatabase } from '../database/LogDatabase.js';\n\nconst args = minimist(process.argv.slice(2), { alias: { h: 'help' } });\n\nasync function main(db: LogDatabase) {\n  let allData = await getExcelData();\n  if (args.nik) {\n    allData = allData.filter((item) => item.nik === args.nik);\n  }\n  for (const item of allData) {\n    console.log(`${item.nik} - Removing existing log`);\n    await db.removeLog(item.nik);\n    await sleep(100);\n  }\n  if (db.sqliteDbPath && fs.existsSync(db.sqliteDbPath)) {\n    await db.close();\n    console.log(`Deleting sqlite database path: ${db.sqliteDbPath}`);\n    await fs.remove(db.sqliteDbPath).catch((error) => {\n      console.error('Error deleting database file:', (error as Error).message);\n    });\n  }\n}\n\nfunction showHelp() {\n  const [node, script] = process.argv;\n  console.log(`Usage: ${normalizePathUnix(node)} ${normalizePathUnix(script)} [options]`);\n  console.log('');\n  console.log('Description:');\n  console.log('  Remove/clean log entries from the kemkes database.');\n  console.log('');\n  console.log('Options:');\n  console.log('  -h, --help         Show this help message');\n  console.log('  --nik <NIK>        Only remove log for the specified NIK');\n  console.log('');\n  console.log('Examples:');\n  console.log('  sehatindonesiaku-cleanDB');\n  console.log('  sehatindonesiaku-cleanDB --nik 1234567890123456');\n}\n\nif (process.argv.some((arg) => /sehatindonesiaku-cleanDB\\.(js|ts|cjs|mjs)$/.test(arg))) {\n  (async () => {\n    let db: LogDatabase;\n    try {\n      if (args.help || args.h) {\n        showHelp();\n        return;\n      }\n      db = await getSehatIndonesiaKuDb();\n      await main(db);\n    } finally {\n      if (db) await db.close();\n    }\n  })();\n}\n"]}