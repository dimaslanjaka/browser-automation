{"version":3,"sources":["../../src/runner/sehatindonesiaku-data-display.ts"],"names":["getSehatIndonesiaKuDb","getExcelData","path","writefile","encryptJson"],"mappings":";;;;;;;;;;;;AAMA,eAAe,OAAA,GAAU;AACvB,EAAA,MAAM,EAAA,GAAK,MAAMA,6CAAA,EAAsB;AACvC,EAAA,MAAM,SAAA,GAAY,MAAMC,oCAAA,EAAa;AACrC,EAAA,IAAI,QAAA,GAAW,CAAA;AACf,EAAA,KAAA,IAAS,CAAA,GAAI,CAAA,EAAG,CAAA,GAAI,SAAA,CAAU,QAAQ,CAAA,EAAA,EAAK;AACzC,IAAA,MAAM,IAAA,GAAO,UAAU,CAAC,CAAA;AACxB,IAAA,IAAI,CAAC,KAAK,GAAA,EAAK;AACb,MAAA,OAAA,CAAQ,OAAO,KAAA,CAAM;AAAA,CAAA,EAAM,QAAQ,CAAA;AAAA,CAAiC,CAAA;AACpE,MAAA,SAAA,CAAU,MAAA,CAAO,GAAG,CAAC,CAAA;AACrB,MAAA,CAAA,EAAA;AACA,MAAA,QAAA,EAAA;AACA,MAAA;AAAA,IACF;AAEA,IAAA,MAAM,MAAA,GAAS,MAAM,EAAA,CAAG,UAAA,CAAqB,KAAK,GAAG,CAAA;AACrD,IAAA,IAAI,MAAA,IAAU,OAAO,EAAA,EAAI;AACvB,MAAA,OAAA,CAAQ,OAAO,KAAA,CAAM,CAAA,GAAA,EAAM,QAAQ,CAAA,2BAAA,EAA8B,IAAA,CAAK,GAAG,CAAA,CAAE,CAAA;AAC3E,MAAA,SAAA,CAAU,CAAC,IAAI,EAAE,GAAG,MAAM,GAAG,MAAA,CAAO,MAAM,QAAA,EAAA,CAAW,MAAA,CAAO,WAAW,EAAA,EAAI,KAAA,CAAM,GAAG,CAAA,CAAE,GAAA,CAAI,CAAC,CAAA,KAAM,CAAA,CAAE,IAAA,EAAM,CAAA,EAAE;AAAA,IAC7G,CAAA,MAAO;AAEL,MAAA,OAAA,CAAQ,OAAO,KAAA,CAAM,CAAA,GAAA,EAAM,QAAQ,CAAA,2BAAA,EAA8B,IAAA,CAAK,GAAG,CAAA,CAAE,CAAA;AAC3E,MAAA,SAAA,CAAU,MAAA,CAAO,GAAG,CAAC,CAAA;AACrB,MAAA,CAAA,EAAA;AAAA,IACF;AACA,IAAA,QAAA,EAAA;AAAA,EACF;AACA,EAAA,MAAM,GAAG,KAAA,EAAM;AACf,EAAA,OAAO,SAAA;AACT;AAEA,eAAsB,mBAAA,GAAsB;AAC1C,EAAA,MAAM,IAAA,GAAO,MAAM,OAAA,EAAQ;AAC3B,EAAA,MAAM,aAAaC,qBAAA,CAAK,IAAA,CAAK,OAAA,CAAQ,GAAA,IAAO,+CAA+C,CAAA;AAC3F,EAAAC,oBAAA,CAAU,YAAYC,yBAAA,CAAY,IAAA,EAAM,OAAA,CAAQ,GAAA,CAAI,gBAAgB,CAAC,CAAA;AACrE,EAAA,OAAA,CAAQ,GAAA,CAAI,CAAA,mBAAA,EAAsB,UAAU,CAAA,CAAE,CAAA;AAChD;AAEA,IAAI,OAAA,CAAQ,KAAK,IAAA,CAAK,CAAC,QAAQ,GAAA,CAAI,QAAA,CAAS,+BAA+B,CAAC,CAAA,EAAG;AAC7E,EAAA,mBAAA,EAAoB;AACtB","file":"sehatindonesiaku-data-display.cjs","sourcesContent":["import path from 'path';\nimport { writefile } from 'sbg-utility';\nimport { getExcelData, getSehatIndonesiaKuDb } from './sehatindonesiaku-data.js';\nimport { DataItem, DataMerged } from './types.js';\nimport { encryptJson } from '../utils/json-crypto.js';\n\nasync function getData() {\n  const db = await getSehatIndonesiaKuDb();\n  const excelData = await getExcelData();\n  let logIndex = 0;\n  for (let i = 0; i < excelData.length; i++) {\n    const data = excelData[i];\n    if (!data.nik) {\n      process.stdout.write(`\\n[${logIndex}] dropping data for empty NIK\\n`);\n      excelData.splice(i, 1);\n      i--; // Adjust index after removal\n      logIndex++;\n      continue;\n    }\n    // Find matching data in DB\n    const dataDb = await db.getLogById<DataItem>(data.nik);\n    if (dataDb && dataDb.id) {\n      process.stdout.write(`\\r[${logIndex}] modifying data for NIK : ${data.nik}`);\n      excelData[i] = { ...data, ...dataDb.data, messages: (dataDb.message || '').split(',').map((s) => s.trim()) };\n    } else {\n      // Drop item if not found in DB\n      process.stdout.write(`\\r[${logIndex}] dropping data for NIK  : ${data.nik}`);\n      excelData.splice(i, 1);\n      i--; // Adjust index after removal\n    }\n    logIndex++;\n  }\n  await db.close();\n  return excelData as DataMerged[];\n}\n\nexport async function generateDataDisplay() {\n  const data = await getData();\n  const outputPath = path.join(process.cwd(), 'public/assets/data/sehatindonesiaku-data.json');\n  writefile(outputPath, encryptJson(data, process.env.VITE_JSON_SECRET));\n  console.log(`Output written to: ${outputPath}`);\n}\n\nif (process.argv.some((arg) => arg.includes('sehatindonesiaku-data-display'))) {\n  generateDataDisplay();\n}\n"]}