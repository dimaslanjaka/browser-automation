{"version":3,"sources":["../../src/runner/sehatindonesiaku-config.ts"],"names":[],"mappings":"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","file":"sehatindonesiaku-config.js","sourcesContent":["import minimist from 'minimist';\nimport moment from 'moment';\nimport { normalizePathUnix } from 'sbg-utility';\nimport { sehatindonesiakuPref } from './sehatindonesiaku-data.js';\n\nconst args = minimist(process.argv.slice(2), {\n  alias: { h: 'help' }\n});\n\n/**\n * Print usage and options help to the console.\n */\nexport function showHelp() {\n  // Print the command and file from process.argv\n  const [node, script] = process.argv;\n  console.log(`Usage: ${normalizePathUnix(node)} ${normalizePathUnix(script)} [options]`);\n  console.log('');\n  console.log('Options:');\n  console.log('  -h, --help                Show this help message');\n  console.log('  --tanggal_pemeriksaan      Set the tanggal_pemeriksaan (DD/MM/YYYY)');\n  console.log('  --provinsi                 Set the provinsi');\n  console.log('  --kabupaten                Set the kabupaten');\n  console.log('  --kecamatan                Set the kecamatan');\n  console.log('  --kelurahan                Set the kelurahan');\n}\n\nif (args.help) {\n  showHelp();\n  process.exit(0);\n}\n\n/**\n * Check if a string is empty or consists only of whitespace.\n */\nfunction isEmpty(str?: string): boolean {\n  return !str || str.trim().length === 0;\n}\n\n/**\n * Exit with an error message.\n */\nfunction exitWithError(message: string): never {\n  console.error(message);\n  process.exit(1);\n}\n\n// Validation map\nconst validators: Record<string, (val: string) => void> = {\n  tanggal_pemeriksaan: (val) => {\n    const parsed = moment(val, 'DD/MM/YYYY', true);\n    if (!parsed.isValid()) exitWithError('Invalid tanggal_pemeriksaan format, expected DD/MM/YYYY');\n    sehatindonesiakuPref.putString('tanggal_pemeriksaan', val);\n  },\n  provinsi: (val) => {\n    if (isEmpty(val)) exitWithError('Invalid provinsi, cannot be empty');\n    sehatindonesiakuPref.putString('provinsi', val);\n  },\n  kabupaten: (val) => {\n    if (isEmpty(val)) exitWithError('Invalid kabupaten, cannot be empty');\n    sehatindonesiakuPref.putString('kabupaten', val);\n  },\n  kecamatan: (val) => {\n    if (isEmpty(val)) exitWithError('Invalid kecamatan, cannot be empty');\n    sehatindonesiakuPref.putString('kecamatan', val);\n  },\n  kelurahan: (val) => {\n    if (isEmpty(val)) exitWithError('Invalid kelurahan, cannot be empty');\n    sehatindonesiakuPref.putString('kelurahan', val);\n  }\n};\n\nlet noMatch = true;\n// Iterate through defined validators\nfor (const [key, validate] of Object.entries(validators)) {\n  const val = args[key];\n  if (val !== undefined) {\n    validate(val);\n    noMatch = false;\n  }\n}\n\nif (process.argv.some((arg) => arg.includes('sehatindonesiaku-config'))) {\n  // If no recognized options were provided, show help\n  if (noMatch) {\n    showHelp();\n  } else {\n    console.log('Configuration updated successfully.');\n  }\n  process.exit(0);\n}\n"]}