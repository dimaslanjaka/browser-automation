{"version":3,"sources":["../../src/runner/sehatindonesiaku-registrasi.ts"],"names":[],"mappings":"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","file":"sehatindonesiaku-registrasi.js","sourcesContent":["import ansiColors from 'ansi-colors';\nimport 'dotenv/config.js';\nimport minimist from 'minimist';\nimport moment from 'moment';\nimport { Browser, Page } from 'puppeteer';\nimport { array_shuffle, array_unique, normalizePathUnix } from 'sbg-utility';\nimport { anyElementWithTextExists, getPuppeteer, waitForDomStable } from '../puppeteer_utils.js';\nimport { fixKemkesDataItem, getExcelData, getSehatIndonesiaKuDb } from './sehatindonesiaku-data.js';\nimport { DataItem } from './types.js';\nimport {\n  DataTidakSesuaiKTPError,\n  KuotaHabisError,\n  PembatasanUmurError,\n  TanggalPemeriksaanError,\n  UnauthorizedError\n} from './sehatindonesiaku-errors.js';\nimport {\n  clickAddressModal,\n  clickDaftarkanDenganNIK,\n  clickKabupatenKota,\n  clickKecamatan,\n  clickKelurahan,\n  clickPilihButton,\n  clickProvinsi,\n  clickSubmit,\n  commonInput,\n  handleKuotaHabisModal,\n  isSpecificModalVisible,\n  selectGender,\n  selectPekerjaan,\n  selectTanggalLahir\n} from './sehatindonesiaku-register-utils.js';\nimport {\n  clickDaftarBaru,\n  clickKembali,\n  enterSehatIndonesiaKu,\n  selectDayFromCalendar\n} from './sehatindonesiaku-utils.js';\n\n// Address defaults moved to processData options\nconst cliArgs = minimist(process.argv.slice(2), {\n  alias: { h: 'help', s: 'single', sh: 'shuffle' },\n  string: ['nik']\n});\nconst isSingleData = cliArgs.single || cliArgs.s || false;\nconst isShuffle = cliArgs.shuffle || cliArgs.sh || false;\n\n/** Normalize --nik CLI arg into string[] */\nfunction parseNikArg(arg: unknown): string[] | undefined {\n  if (!arg) return;\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    return String(arg)\n      .split(',')\n      .map((n) => n.trim())\n      .filter(Boolean);\n  }\n  if (Array.isArray(arg)) {\n    return arg\n      .flatMap((n) => String(n).split(','))\n      .map((n) => n.trim())\n      .filter(Boolean);\n  }\n  return;\n}\n\nasync function main() {\n  let needLogin = false;\n  const db = await getSehatIndonesiaKuDb();\n  const { browser } = await getPuppeteer();\n\n  // Parse --nik from CLI args and pass to getData\n  const nikList = parseNikArg(cliArgs.nik);\n  let allData = await getData(db, { nik: nikList });\n  if (isShuffle) allData = array_shuffle(allData);\n\n  // const sampleData = allData.find((item) => item.nik === '3173051407091002');\n  // await processData(browser, sampleData, db);\n\n  for (const item of allData) {\n    try {\n      await processData(browser, item, db);\n    } catch (e) {\n      const message = ((await db.getLogById(item.nik))?.message ?? '').split(',');\n      if (e instanceof DataTidakSesuaiKTPError) {\n        console.warn(`[registrasi] ${item.nik} - ${ansiColors.red('Data tidak sesuai KTP')}`);\n        message.push('Data tidak sesuai KTP');\n        await db.addLog({\n          id: item.nik,\n          message: array_unique(message).join(','),\n          data: { registered: false, ...item }\n        });\n        continue; // Skip this item and continue with the next\n      } else if (e instanceof PembatasanUmurError) {\n        console.warn(`[registrasi] Pembatasan umur untuk NIK ${item.nik}:`);\n        message.push('Pembatasan umur');\n        await db.addLog({\n          id: item.nik,\n          message: array_unique(message).join(','),\n          data: { registered: false, ...item }\n        });\n        continue; // Skip this item and continue with the next\n      } else if (e instanceof UnauthorizedError) {\n        needLogin = true;\n        console.warn(\n          `[registrasi] ${ansiColors.redBright('Login required')}, please ${ansiColors.bold('login manually')} from opened browser. (close browser manual)`\n        );\n        break;\n      } else if (e instanceof TanggalPemeriksaanError) {\n        console.warn(\n          `[registrasi] ${item.nik} - ${ansiColors.red('Tanggal Pemeriksaan tidak valid')}: ${item.tanggal_pemeriksaan}`\n        );\n        message.push(`Tanggal Pemeriksaan tidak valid. ${item.tanggal_pemeriksaan}`);\n        await db.addLog({\n          id: item.nik,\n          message: array_unique(message).join(','),\n          data: { registered: false, ...item }\n        });\n        continue;\n      }\n\n      // Break the loop on unexpected errors (uncomment below for development)\n      // break;\n    }\n\n    if (isSingleData) break; // Process only one item if --single or -s flag is passed\n  }\n\n  if (needLogin) {\n    // Keep the browser open for manual login\n    return;\n  }\n\n  // comment below codes for development\n  console.log('[registrasi] All data processed. Closing browser...');\n  await browser.close();\n  await db.close();\n  process.exit(0);\n}\n\ninterface ProcessDataOptions {\n  provinsi?: string;\n  kabupaten?: string;\n  kecamatan?: string;\n  kelurahan?: string;\n}\n\nasync function processData(\n  browserOrPage: Browser | Page,\n  item: Partial<DataItem>,\n  db,\n  options: ProcessDataOptions = {}\n) {\n  // Merge options with hardcoded defaults\n  const provinsi = options.provinsi ?? 'DKI Jakarta';\n  const kabupaten = options.kabupaten ?? 'Kota Adm. Jakarta Barat';\n  const kecamatan = options.kecamatan ?? 'Kebon Jeruk';\n  const kelurahan = options.kelurahan ?? 'Kebon Jeruk';\n\n  item = fixKemkesDataItem(item);\n\n  // Close tab when more than 5 tabs open\n  const pages =\n    typeof (browserOrPage as any).browser === 'function'\n      ? await (browserOrPage as Page).browser().pages()\n      : await (browserOrPage as Browser).pages();\n  if (pages.length > 5) {\n    console.log(`[registrasi] Closing excess tab, current open tabs: ${pages.length}`);\n    await pages[0].close(); // Close the first tab\n  }\n\n  // Create a new page for each data item\n  console.log(`[registrasi] Processing data`, item);\n  const page =\n    typeof (browserOrPage as any).browser === 'function'\n      ? await (browserOrPage as Page).browser().newPage()\n      : await (browserOrPage as Browser).newPage();\n  const isLoggedIn = await enterSehatIndonesiaKu(page);\n  if (!isLoggedIn) throw new UnauthorizedError();\n  await page.goto('https://sehatindonesiaku.kemkes.go.id/ckg-pendaftaran-individu', { waitUntil: 'networkidle2' });\n  await waitForDomStable(page, 2000, 6000);\n\n  await clickDaftarBaru(page);\n  await waitForDomStable(page, 2000, 6000);\n\n  // Common input\n  console.log(`[registrasi] ${item.nik} - Filling common input fields...`);\n  await commonInput(page, item);\n  await waitForDomStable(page, 2000, 6000);\n\n  // Input datepicker\n  console.log(`[registrasi] ${item.nik} - Selecting date of birth...`);\n  await selectTanggalLahir(page, item);\n  await waitForDomStable(page, 2000, 6000);\n\n  // Select gender (Jenis Kelamin)\n  console.log(`[registrasi] ${item.nik} - Selecting gender...`);\n  await selectGender(page, item);\n  await waitForDomStable(page, 2000, 6000);\n\n  // Select pekerjaan (Pekerjaan)\n  console.log(`[registrasi] ${item.nik} - Selecting pekerjaan...`);\n  await selectPekerjaan(page, item);\n  await waitForDomStable(page, 2000, 6000);\n\n  // Select address\n  console.log(`[registrasi] ${item.nik} - Selecting address...`);\n  await clickAddressModal(page);\n  await clickProvinsi(page, provinsi);\n  await clickKabupatenKota(page, kabupaten);\n  await clickKecamatan(page, kecamatan);\n  await clickKelurahan(page, kelurahan);\n  await waitForDomStable(page, 2000, 6000);\n\n  // Select calendar date pemeriksaan\n  console.log(`[registrasi] ${item.nik} - Selecting tanggal pemeriksaan...`);\n  if (!item.tanggal_pemeriksaan) {\n    item.tanggal_pemeriksaan = moment().format('DD/MM/YYYY');\n    console.log(\n      `[registrasi] ${item.nik} - tanggal_pemeriksaan is empty, defaulting to today: ${item.tanggal_pemeriksaan}`\n    );\n  }\n  if (!(await selectDayFromCalendar(page, item.tanggal_pemeriksaan))) {\n    throw new TanggalPemeriksaanError(item.nik);\n  }\n  await waitForDomStable(page, 2000, 6000);\n\n  // click submit button\n  console.log(`[registrasi] ${item.nik} - Submitting form...`);\n  await clickSubmit(page);\n  await waitForDomStable(page, 2000, 6000);\n\n  // Handle age restriction modal\n  await isPembatasanUmurVisible(page, item);\n\n  // Handle modal \"Kuota pemeriksaan habis\"\n  await kuotaHabisHandler(page, item);\n\n  // Handle modal formulir pendaftaran\n  console.log(`[registrasi] ${item.nik} - Handling formulir pendaftaran modal...`);\n  const isModalRegistrationVisible = await isSpecificModalVisible(page, 'formulir pendaftaran');\n  console.log(`[registrasi] Modal formulir pendaftaran visible: ${isModalRegistrationVisible}`);\n  if (isModalRegistrationVisible) {\n    // Re-check pembatasan umur\n    await isPembatasanUmurVisible(page, item);\n    // Click pilih\n    console.log(`[registrasi] ${item.nik} - Clicking \"Pilih\" button inside individu terdaftar table...`);\n    await clickPilihButton(page);\n    await waitForDomStable(page, 2000, 6000);\n    console.log(`[registrasi] ${item.nik} - Clicking \"Daftarkan dengan NIK\" button...`);\n    await clickDaftarkanDenganNIK(page);\n    await waitForDomStable(page, 2000, 6000);\n    // Re-check kuota pemeriksaan\n    await kuotaHabisHandler(page, item);\n  }\n\n  if (await isSuccessModalVisible(page)) {\n    console.log(`[registrasi] ${item.nik} - ${ansiColors.green('Data registered successfully!')}`);\n    // Save the data to database\n    const message = ((await db.getLogById(item.nik))?.message ?? '').split(',');\n    message.push('Data registered successfully');\n    await db.addLog({\n      id: item.nik,\n      data: { ...item, registered: true },\n      message: array_unique(message).join(',')\n    });\n    return; // Exit after successful processing\n  }\n\n  // Handle modal \"Peserta Menerima Pemeriksaan\"\n  if (await isSpecificModalVisible(page, 'Peserta Menerima Pemeriksaan')) {\n    console.log(`[registrasi] ${item.nik} - Peserta Menerima Pemeriksaan modal is visible.`);\n    await clickKembali(page);\n    // Save the data to database\n    const message = ((await db.getLogById(item.nik))?.message ?? '').split(',');\n    message.push('Peserta Sudah Menerima Pemeriksaan');\n    await db.addLog({\n      id: item.nik,\n      data: { ...item, registered: true },\n      message: array_unique(message).join(',')\n    });\n    return;\n  }\n\n  // Check modal \"Data belum sesuai KTP\"\n  if (await isSpecificModalVisible(page, 'Data belum sesuai KTP')) {\n    console.log(`[registrasi] ${item.nik} - Data belum sesuai KTP modal is visible.`);\n    throw new DataTidakSesuaiKTPError(item.nik);\n  }\n}\n\n/**\n * Handles the \"Kuota pemeriksaan habis\" modal during the registration process.\n * If the modal is visible, attempts to close it and throws a KuotaHabisError if unsuccessful.\n * Waits for the DOM to stabilize after handling the modal.\n *\n * @param page The Puppeteer Page instance to operate on.\n * @param item The data item being processed.\n */\nexport async function kuotaHabisHandler(page: Page, item: Partial<DataItem>) {\n  const isKuotaHabisVisible = await isSpecificModalVisible(page, 'Kuota pemeriksaan habis');\n  console.log(`[registrasi] Modal \"Kuota pemeriksaan habis\" visible: ${isKuotaHabisVisible}`);\n  if (isKuotaHabisVisible) {\n    const isClicked = await handleKuotaHabisModal(page);\n    if (!isClicked) throw new KuotaHabisError(item.nik);\n    await waitForDomStable(page, 2000, 6000);\n  }\n}\n\nexport async function isPembatasanUmurVisible(page: Page, item: Partial<DataItem>) {\n  const isAgeLimitCheckDisplayed =\n    (await anyElementWithTextExists(page, 'div.pb-2', 'Pembatasan Umur Pemeriksaan')) ||\n    (await isSpecificModalVisible(page, 'Pembatasan Umur Pemeriksaan'));\n  console.log(`[registrasi] Is age limit check displayed: ${isAgeLimitCheckDisplayed}`);\n  if (isAgeLimitCheckDisplayed) throw new PembatasanUmurError(item.nik);\n}\n\nasync function isSuccessModalVisible(page: Page) {\n  // Find all divs that could contain modals\n  const modals = await page.$$('div.p-2');\n  for (const modal of modals) {\n    const text = await page.evaluate((el) => el.innerText, modal);\n    // Check if it contains the exact success text\n    if (text.includes('Berhasil Daftar')) {\n      // Check if it is visible\n      const visible = await page.evaluate((el) => {\n        const style = window.getComputedStyle(el);\n        return style.display !== 'none' && style.visibility !== 'hidden' && style.opacity !== '0';\n      }, modal);\n      if (visible) return true;\n    }\n  }\n  return false;\n}\n\nexport interface getDataOptions {\n  /** only process specific NIK */\n  nik?: string[];\n  /** enable debug mode */\n  debug?: boolean;\n}\n\nasync function getData(db, options: getDataOptions = {}) {\n  let rawData: DataItem[] = await getExcelData();\n\n  // Filter by NIK if provided\n  if (options.nik?.length) {\n    const nikSet = new Set(options.nik);\n    rawData = rawData.filter((item) => nikSet.has(item.nik));\n    if (options.debug) console.log(`[registrasi] Filtering rawData for NIK(s): ${options.nik.join(', ')}`);\n  }\n\n  const today = moment().startOf('day');\n  // Use async map/filter to await DB calls\n  const filtered = [];\n  for (const item of rawData) {\n    // Skip empty or invalid NIK\n    if (!item.nik || String(item.nik).trim().length === 0) {\n      if (options.debug) console.log(`[registrasi] Skipping row for empty/invalid NIK:`, item);\n      continue;\n    }\n\n    // Merge data with database (awaited)\n    const dbItem = await db.getLogById(item.nik);\n    Object.assign(item, dbItem?.data ?? {});\n\n    // Fix tanggal_pemeriksaan if empty\n    if (!item.tanggal_pemeriksaan?.trim()) {\n      item.tanggal_pemeriksaan = moment().format('DD/MM/YYYY');\n      if (options.debug) console.log(`[registrasi] Fixing empty tanggal_pemeriksaan for NIK: ${item.nik}`);\n    }\n\n    // Skip if tanggal_pemeriksaan is in the past\n    const pemeriksaanDate = moment(item.tanggal_pemeriksaan, 'DD/MM/YYYY').startOf('day');\n    if (pemeriksaanDate.isBefore(today)) {\n      if (options.debug)\n        console.log(\n          `[registrasi] Skipping row for past tanggal_pemeriksaan: ${item.nik} - ${item.tanggal_pemeriksaan}`\n        );\n      continue;\n    }\n\n    // Skip if object has 'registered' property\n    if (Object.prototype.hasOwnProperty.call(item, 'registered')) {\n      if (options.debug) console.log(`[registrasi] Skipping row for registered property: ${item.nik}`);\n      continue;\n    }\n\n    filtered.push(item);\n  }\n  return filtered;\n}\n\nexport function showHelp() {\n  const [node, script] = process.argv;\n  console.log('[registrasi] SehatIndonesiaku Kemkes CLI');\n  console.log('[registrasi] ----------------------------');\n  console.log(`[registrasi] Usage: ${normalizePathUnix(node)} ${normalizePathUnix(script)} [options]`);\n  console.log('[registrasi]');\n  console.log('[registrasi] Options:');\n  console.log('[registrasi]   -h, --help        Show this help message and exit');\n  console.log('[registrasi]   -s, --single      Process only one data item (first match or filtered by --nik)');\n  console.log('[registrasi]   -sh, --shuffle    Shuffle data before processing');\n  console.log('[registrasi]   --nik <NIK>       Process only data with specific NIK (useful with --single)');\n  console.log('[registrasi]');\n  console.log('[registrasi] Examples:');\n  console.log(`[registrasi]   ${normalizePathUnix(node)} ${normalizePathUnix(script)} --help`);\n  console.log(`[registrasi]   ${normalizePathUnix(node)} ${normalizePathUnix(script)} --single`);\n  console.log(`[registrasi]   ${normalizePathUnix(node)} ${normalizePathUnix(script)} --nik 1234567890123456`);\n  console.log(`[registrasi]   ${normalizePathUnix(node)} ${normalizePathUnix(script)} --single --nik 1234567890123456`);\n  console.log(`[registrasi]   ${normalizePathUnix(node)} ${normalizePathUnix(script)} --shuffle`);\n  console.log('[registrasi]');\n  console.log('[registrasi] For more information, see the documentation or README.');\n}\n\nif (process.argv.some((arg) => /sehatindonesiaku-registrasi\\.(js|ts|cjs|mjs)$/i.test(arg))) {\n  (async () => {\n    if (cliArgs.h || cliArgs.help) {\n      showHelp();\n      return;\n    }\n    await main();\n  })();\n}\n\nexport { getData as getRegistrasiData, main as mainRegistrasi, processData as processRegistrasiData };\n"]}