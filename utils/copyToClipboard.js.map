{"version":3,"sources":["../../src/utils/copyToClipboard.js"],"names":[],"mappings":";;AAaA,SAAS,gBAAgB,IAAA,EAAM;AAC7B,EAAA,IAAI,SAAA,CAAU,SAAA,IAAa,SAAA,CAAU,SAAA,CAAU,SAAA,EAAW;AAExD,IAAA,OAAO,UAAU,SAAA,CAAU,SAAA,CAAU,IAAI,CAAA,CAAE,KAAA,CAAM,CAAC,GAAA,KAAQ;AACxD,MAAA,OAAA,CAAQ,IAAA,CAAK,6BAA6B,GAAG,CAAA;AAE7C,MAAA,OAAO,MAAA,CAAO,oCAAoC,IAAI,CAAA;AAAA,IACxD,CAAC,CAAA;AAAA,EACH,CAAA,MAAA,IAAW,MAAA,CAAO,aAAA,IAAiB,MAAA,CAAO,cAAc,OAAA,EAAS;AAE/D,IAAA,OAAO,MAAA,CAAO,aAAA,CAAc,OAAA,CAAQ,MAAA,EAAQ,IAAI,CAAA;AAAA,EAClD,WAAW,QAAA,CAAS,qBAAA,IAAyB,QAAA,CAAS,qBAAA,CAAsB,MAAM,CAAA,EAAG;AACnF,IAAA,IAAI,QAAA,GAAW,QAAA,CAAS,aAAA,CAAc,UAAU,CAAA;AAChD,IAAA,QAAA,CAAS,WAAA,GAAc,IAAA;AACvB,IAAA,QAAA,CAAS,MAAM,QAAA,GAAW,OAAA;AAC1B,IAAA,QAAA,CAAS,IAAA,CAAK,YAAY,QAAQ,CAAA;AAClC,IAAA,QAAA,CAAS,MAAA,EAAO;AAChB,IAAA,IAAI;AACF,MAAA,OAAO,QAAA,CAAS,YAAY,MAAM,CAAA;AAAA,IACpC,SAAS,EAAA,EAAI;AACX,MAAA,OAAA,CAAQ,IAAA,CAAK,6BAA6B,EAAE,CAAA;AAC5C,MAAA,OAAO,MAAA,CAAO,oCAAoC,IAAI,CAAA;AAAA,IACxD,CAAA,SAAE;AACA,MAAA,QAAA,CAAS,IAAA,CAAK,YAAY,QAAQ,CAAA;AAAA,IACpC;AAAA,EACF;AACF;AAGA,IAAO,uBAAA,GAAQ","file":"copyToClipboard.js","sourcesContent":["/**\n * Copies a string to the clipboard.\n *\n * Must be called from within an event handler such as a click.\n * Returns a Promise that resolves to true if the copy was successful, or false otherwise.\n *\n * Browser support: Chrome 43+, Firefox 42+, Safari 10+, Edge, and Internet Explorer 10+.\n * In Internet Explorer, the clipboard feature may be disabled by an administrator.\n * If the clipboard API fails, a prompt will be shown to the user as a fallback.\n *\n * @param {string} text - The text to copy to the clipboard.\n * @returns {Promise<boolean>|boolean|undefined} Resolves to true if successful, false otherwise. May return undefined in some fallback cases.\n */\nfunction copyToClipboard(text) {\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    // Modern asynchronous clipboard API\n    return navigator.clipboard.writeText(text).catch((err) => {\n      console.warn('Copy to clipboard failed.', err);\n      // Fallback to prompt if clipboard API fails\n      return prompt('Copy to clipboard: Ctrl+C, Enter', text);\n    });\n  } else if (window.clipboardData && window.clipboardData.setData) {\n    // Internet Explorer-specific code path to prevent textarea being shown while dialog is visible.\n    return window.clipboardData.setData('Text', text);\n  } else if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    var textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      console.warn('Copy to clipboard failed.', ex);\n      return prompt('Copy to clipboard: Ctrl+C, Enter', text);\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n}\n\nexport { copyToClipboard };\nexport default copyToClipboard;\n"]}