{"version":3,"sources":["../../../src/react-website/components/highlight-helper.js"],"names":["hljs","randomStr","loadJS","copyToClipboard"],"mappings":"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","file":"highlight-helper.cjs","sourcesContent":["import hljs from 'highlight.js';\nimport copyToClipboard from '../../utils/copyToClipboard';\nimport { loadJS, randomStr } from '../../utils-browser.js';\n\n/**\n * Start highlighting for a given <pre> or <code> element.\n * @param {HTMLElement} preCode\n */\nfunction startHighlighter(preCode) {\n  // validate hljs for browser\n  // if ('hljs' in window === false) return loadHljs();\n  // validate hljs for React\n  if (!('highlightAll' in hljs)) return loadHljs();\n\n  /** @type {HTMLElement|null} */\n  let code = preCode;\n  if (preCode.tagName.toLowerCase() === 'pre') {\n    // select inner <code /> from <pre /> tag\n    code = preCode.querySelector('code');\n    if (!code) {\n      // create <code /> tag on single <pre /> tag\n      const newC = document.createElement('code');\n      newC.innerHTML = preCode.innerHTML;\n      preCode.innerHTML = '';\n      preCode.appendChild(newC);\n      code = preCode.querySelector('code');\n    }\n  }\n\n  if (!code) {\n    console.log('pre code is null');\n    console.log(preCode);\n    return;\n  }\n\n  // add new id\n  if (!code.id) code.id = 'code-' + randomStr(4);\n\n  // fix mysql highlight\n  if (code.classList.contains('language-mysql')) {\n    code.classList.remove('language-mysql');\n    code.classList.add('language-sql');\n  }\n\n  // start highlight pre code[data-highlight]\n  if (code.hasAttribute('data-highlight')) {\n    if (code.getAttribute('data-highlight') !== 'false') {\n      highlightElement(code);\n    }\n  } else {\n    // highlight no attribute data-highlight â€” enable by default\n    highlightElement(code);\n  }\n}\n\n/**\n * Highlight a <code> element using Highlight.js\n * @param {HTMLElement} code\n */\nfunction highlightElement(code) {\n  if (!code.hasAttribute('highlighted')) {\n    code.setAttribute('highlighted', 'true');\n    if (hljs.highlightElement) {\n      hljs.highlightElement(code);\n    } else {\n      hljs.highlightBlock(code);\n    }\n  }\n}\n\n/**\n * Load Highlight.js from CDN if not already loaded\n */\nfunction loadHljs() {\n  if ('hljs' in window) return;\n  loadJS('//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js', {\n    onload: initHljs\n  });\n}\n\n/**\n * Initialize syntax highlighting for all <pre> blocks\n */\nexport function initHljs() {\n  document.querySelectorAll('pre').forEach(startHighlighter);\n\n  // Alternative full document highlight (if needed)\n  /*\n  if (\"initHighlightingOnLoad\" in hljs) {\n    hljs.initHighlightingOnLoad();\n  } else if (\"highlightAll\" in hljs) {\n    hljs.highlightAll();\n  }\n  */\n}\n\n/**\n * Initialize copy-to-clipboard functionality on code blocks\n */\nexport function initClipBoard() {\n  import('bluebird').then(({ default: Bluebird }) => {\n    Bluebird.all(Array.from(document.querySelectorAll('pre'))).each(function (codeBlock) {\n      if (!codeBlock.getAttribute('id')) {\n        codeBlock.setAttribute('id', randomStr(4));\n      }\n\n      /** @type {HTMLButtonElement|null} */\n      let button = codeBlock.querySelector('.copy-code-button');\n      let append = false;\n\n      if (!button) {\n        append = true;\n        button = document.createElement('button');\n        button.className = 'copy-code-button';\n        button.type = 'button';\n        const s = codeBlock.innerText;\n        button.setAttribute('data-clipboard-text', s);\n        button.setAttribute('title', 'Copy code block');\n\n        const span = document.createElement('span');\n        span.innerText = 'Copy';\n        button.appendChild(span);\n      }\n\n      button.onclick = function (e) {\n        const el = document.getElementById(codeBlock.getAttribute('id'));\n        copyToClipboard(el.textContent.replace(/(Copy|Copied)$/gm, ''), e)\n          .then(() => {\n            e.target.textContent = 'Copied';\n          })\n          .finally(() => {\n            window.setTimeout(() => {\n              e.target.textContent = 'Copy';\n            }, 2000);\n          })\n          .catch(console.error);\n      };\n\n      if (append) codeBlock.appendChild(button);\n    });\n  });\n}\n\n/** Main auto-init for browsers */\nif (typeof window !== 'undefined' && typeof document !== 'undefined') {\n  if (document.readyState !== 'loading') {\n    document.addEventListener('scroll', initHljs);\n    // triggerAdsense(undefined);\n  } else {\n    document.addEventListener('DOMContentLoaded', initHljs);\n  }\n}\n"]}